<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Troubleshooting on Docs</title><link>/tags/troubleshooting/</link><description>Recent content in Troubleshooting on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/tags/troubleshooting/index.xml" rel="self" type="application/rss+xml"/><item><title>Accessing LocalStack via the endpoint URL</title><link>/references/network-troubleshooting/endpoint-url/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/network-troubleshooting/endpoint-url/</guid><description>This documentation provides step-by-step guidance on how to access LocalStack services via the endpoint URL and troubleshoot common issues.
From the same computer Suppose you have LocalStack installed on your machine and want to access it using the AWS CLI. To connect, you must expose port 4566 from your LocalStack instance and connect to localhost or a domain name that points to localhost. While the LocalStack CLI does this automatically, when running the Docker container directly or with docker compose, you must configure it manually.</description></item><item><title>Network troubleshooting</title><link>/references/network-troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/network-troubleshooting/</guid><description>If you have difficulties connecting your application code to LocalStack, please choose the scenario below that best describes your networking layout.
Tip LocalStack only binds to IPv4 addresses (e.g. 127.0.0.1). Check you are not trying to access LocalStack over IPv6. Using the endpoint URL For example, setting the endpoint_url parameter with an AWS SDK.
From the same computer
From a container LocalStack created
From your container
From a separate host</description></item><item><title>Transparent endpoint injection</title><link>/references/network-troubleshooting/transparent-endpoint-injection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/network-troubleshooting/transparent-endpoint-injection/</guid><description>Suppose you&amp;rsquo;re attempting to access LocalStack, but you&amp;rsquo;re relying on transparent endpoint injection to redirect AWS (*.amazonaws.com) requests. In such cases, there are different approaches you can take depending on your setup.
From your host If you&amp;rsquo;re using LocalStack with an Auth Token, then you can utilize the DNS server to perform requests to LocalStack as if it were AWS. You need to make two changes:
Publish port 53 from the LocalStack docker container to your host.</description></item><item><title>Accessing a resource created by LocalStack</title><link>/references/network-troubleshooting/created-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/network-troubleshooting/created-resources/</guid><description>If you have created a resource using LocalStack, such as an OpenSearch cluster or RDS database, you may need to access it from your application. Typically, these resources are accessible through a URL or a hostname provided by LocalStack. By default, LocalStack returns the hostname localhost.localstack.cloud, which resolves to LocalStack using DNS. For special environments (e.g., proxies), the configuration LOCALSTACK_HOST customizes the URLs returned by LocalStack. This guide will explore different scenarios and provide detailed instructions on accessing resources created by LocalStack under different scenarios.</description></item></channel></rss>