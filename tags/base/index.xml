<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Base on Docs</title><link>/tags/base/</link><description>Recent content in Base on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/tags/base/index.xml" rel="self" type="application/rss+xml"/><item><title>Ephemeral Instances</title><link>/user-guide/cloud-sandbox/ephemeral-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-sandbox/ephemeral-instance/</guid><description>Introduction Ephemeral Instances allows you to run a LocalStack instance in the cloud. You can interact with these instances via the LocalStack Web Application, or by configuring your integrations and developer tools with the endpoint URL of the ephemeral instance.
Note Ephemeral Instances is offered as a preview feature and is under active development. Getting started This guide is designed for users new to Ephemeral Instance and assumes basic knowledge of the LocalStack Web Application.</description></item><item><title>Getting started</title><link>/user-guide/extensions/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/getting-started/</guid><description>Introduction MailHog is an open source email testing tool for developers. It provides a simple SMTP server and web interface that allows developers to easily catch and inspect emails sent from their application during development. In this guide, you will install and use the official MailHog extension for LocalStack and send an email through SES, while inspecting it in MailHog.
Prerequisites LocalStack Account AWS CLI Installation To get started, start your LocalStack instance with your LOCALSTACK_AUTH_TOKEN.</description></item><item><title>IAM Policy Enforcement</title><link>/user-guide/security-testing/iam-enforcement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/iam-enforcement/</guid><description>Introduction IAM Policy Enforcement feature can be used to test your security policies and create a more realistic environment that more closely resembles real AWS. The environment configuration ENFORCE_IAM=1 is required while starting LocalStack to enable this feature. Per default, IAM enforcement is disabled, and all APIs can be accessed without authentication.
Getting started This guide is designed for users new to IAM Policy Enforcement and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.</description></item><item><title>Application Preview</title><link>/user-guide/cloud-sandbox/application-previews/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-sandbox/application-previews/</guid><description>Introduction Application Preview generates a preview environment from GitHub Actions workflows. For example, you can create a preview URL for every GitHub Pull Request (PRs). It allows temporary deployment of AWS powered applications on a LocalStack Ephemeral Instance to preview changes. This feature is currently only available for GitHub repositories that use GitHub Actions.
Note Application Preview is offered as a preview feature and is under active development. Getting started This guide is designed for users new to Application Preview and assumes basic knowledge of GitHub Actions.</description></item><item><title>Cloud Pods</title><link>/user-guide/state-management/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/cloud-pods/</guid><description>Introduction Cloud pods are persistent state snapshots of your LocalStack instance that can easily be stored, versioned, shared, and restored. Cloud Pods can be used for various purposes, such as:
Save and manage snapshots of active LocalStack instances. Share state snapshots with your team to debug collectively. Automate your testing pipelines by pre-seeding CI environments. Create reproducible development and testing environments locally. Installation You can save and load the persistent state of Cloud Pods, you can use the Cloud Pods command-line interface (CLI).</description></item><item><title>Explainable IAM</title><link>/user-guide/security-testing/explainable-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/explainable-iam/</guid><description>Introduction The IAM Policy Engine logs output related to failed policy evaluation directly to the LocalStack logs. You can enable DEBUG=1 to gain visibility into these log messages, allowing you to identify the additional policies required for your request to succeed.
Getting started This guide is designed for users new to Explainable IAM and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.
Start your LocalStack container with the DEBUG=1 and ENFORCE_IAM=1 environment variables set:</description></item><item><title>Managing extensions</title><link>/user-guide/extensions/managing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/managing-extensions/</guid><description>You have different options to install and manage your LocalStack extensions depending on your environment and work style.
Extensions are managed through the LocalStack container, but stored in the LocalStack volume on your host. The next time you start up LocalStack, your extensions will still be there!
Using the extensions manager in our App The easiest way to manage official extensions is through our webapp and our Extension Manager App. Simply install and remove extensions from your specific LocalStack instance directly from the App.</description></item><item><title>Persistence</title><link>/user-guide/state-management/persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/persistence/</guid><description>Introduction LocalStack&amp;rsquo;s Persistence mechanism enables the saving and restoration of the entire LocalStack state, including all AWS resources and data, on your local machine. It functions as a &amp;ldquo;pause and resume&amp;rdquo; feature, allowing you to take a snapshot of your LocalStack instance and save this data to disk. This mechanism ensures a quick and efficient way to preserve and continue your work with AWS resources locally.
Configuration To start snapshot-based persistence, launch LocalStack with the configuration option PERSISTENCE=1.</description></item><item><title>Developing extensions</title><link>/user-guide/extensions/developing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/developing-extensions/</guid><description>Introduction This section provides a brief overview of how to develop your own extensions.
Extensions API LocalStack exposes a Python API for building extensions that can be found in the core codebase in localstack.extensions.api.
The basic interface to implement is as follows:
class Extension(BaseExtension): &amp;#34;&amp;#34;&amp;#34; An extension that is loaded into LocalStack dynamically. The method execution order of an extension is as follows: - on_extension_load - on_platform_start - update_gateway_routes - update_request_handlers - update_response_handlers - on_platform_ready - on_platform_shutdown &amp;#34;&amp;#34;&amp;#34; namespace: str = &amp;#34;localstack.</description></item><item><title>Export &amp; Import State</title><link>/user-guide/state-management/export-import-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/export-import-state/</guid><description>Introduction The Export/Import State feature enables you to export the state of your LocalStack instance into a file and import it into another LocalStack instance. This feature is useful when you want to save your LocalStack instance&amp;rsquo;s state for later use.
LocalStack CLI The LocalStack CLI enables you to export your infrastructure state to a file and import it into another LocalStack instance. You can access the state management commands by running localstack state in your terminal.</description></item><item><title>Extensions Library</title><link>/user-guide/extensions/extensions-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/extensions-library/</guid><description>Introduction LocalStack extensions allows you to extend and customize LocalStack. A LocalStack extension is a Python application that runs together with LocalStack within the LocalStack container.
LocalStack extensions are available to licensed users, and the list of available extensions can be found in the Extensions Library.
Installing an Extension To install an extension using the LocalStack Extensions Library, you can navigate to the app.localstack.cloud/extensions/library and click on the Go to Instance button to open the list of available instances.</description></item><item><title>Launchpad</title><link>/user-guide/state-management/launchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/launchpad/</guid><description>The LocalStack Cloud Pods Launchpad enables you to easily share and inject Cloud Pods into a LocalStack instance.
Creating your shareable link You can visit Cloud Pods launchpad to generate a shareable link for your pods.
Enter a public URL to your pod Cloud Pod the first input field, then click Generate Link. You can copy the resulting link and share it with others. Additionally, you have the option to copy a markdown snippet for quickly adding a badge to your repository.</description></item><item><title>CLI command reference</title><link>/user-guide/state-management/pods-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/pods-cli/</guid><description>This reference provides descriptions and example commands for LocalStack Cloud Pods CLI (pod) commands.
Syntax Use the following syntax to run localstack pod commands from your terminal window:
$ localstack pod [OPTIONS] COMMAND [ARGS]... In the above syntax:
COMMAND specifies the operation you want to perform with your Cloud Pods (save or load). OPTIONS specifies the optional flags. ARGS specifies the command arguments. Commands The following section lists the available commands for the Cloud Pods CLI.</description></item><item><title>Transparent Endpoint Injection</title><link>/user-guide/tools/transparent-endpoint-injection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/transparent-endpoint-injection/</guid><description>Introduction LocalStack provides Transparent Endpoint Injection, which enables seamless connectivity to LocalStack without modifying your application code targeting AWS. The DNS Server resolves AWS domains such as *.amazonaws.com including subdomains to the LocalStack container. Therefore, your application seamlessly accesses the LocalStack APIs instead of the real AWS APIs. For local testing, you might need to disable SSL validation as explained under Self-signed certificates.
Note This feature is enabled when the LocalStack DNS server is used.</description></item><item><title>Event Studio</title><link>/user-guide/tools/event-studio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/event-studio/</guid><description>Introduction Event Studio allows users to view, collect, and inspect data exchanges, including event payloads and metadata, between AWS services. It enhances system observability by displaying the data exchanged at every stage, facilitating clear understanding of event flows. It further centralizes debugging by enabling event replay at any system stage for detailed analysis and troubleshooting. In addition, it serves as a single point of truth to understand potential errors, service configuration mismatches and IAM permission issues.</description></item><item><title>Stack Insights</title><link>/user-guide/web-application/stack-insights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/stack-insights/</guid><description>Introduction LocalStack collects execution events to provide usage analytics and insights into development and testing. Stack Insights let users report AWS API usage telemetry to their LocalStack account.
Stack Insights show which APIs are used, which clients or integrations use specific services and API operations, and which services cause the most API errors.
Note Your privacy matters to us! We only collect anonymized and sanitized data. No sensitive information about your application is ever collected or exposed.</description></item><item><title>API Gateway</title><link>/user-guide/aws/apigateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/apigateway/</guid><description>Introduction API Gateway is a managed service that enables developers to create, deploy, and manage APIs (Application Programming Interfaces). It allows easy creation of REST, HTTP, and WebSocket APIs to securely access data, business logic, or functionality from backend services like AWS Lambda functions or EC2 instances. API Gateway supports standard HTTP methods such as GET, POST, PUT, PATCH, and DELETE and integrates with various AWS services, including Lambda, Cognito, CloudWatch, and X-Ray.</description></item><item><title>AppConfig</title><link>/user-guide/aws/appconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appconfig/</guid><description>AppConfig is a service provided by Amazon Web Services (AWS) that simplifies the process of managing and deploying application configurations. AppConfig offers centralized management of configuration data and the ability to create, manage, and deploy configuration changes separately. It allows you to avoid deploying the service repeatedly for smaller changes, enables controlled deployments to applications and includes built-in validation checks &amp;amp; monitoring.
LocalStack allows you to use the AppConfig APIs in your local environment to define configurations for different environments and deploy them to your applications as needed.</description></item><item><title>Application Auto Scaling</title><link>/user-guide/aws/applicationautoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/applicationautoscaling/</guid><description>Introduction Application Auto Scaling is a centralized solution for managing automatic scaling by defining scaling policies based on specific metrics. Based on CPU utilization or request rates, it automatically adjusts capacity in response to changes in workload. With Application Auto Scaling, you can configure automatic scaling for services such as DynamoDB, ECS, Lambda, ElastiCache, and more. Auto scaling uses CloudWatch under the hood to configure scalable targets which a service namespace, resource ID, and scalable dimension can uniquely identify.</description></item><item><title>Auto Scaling</title><link>/user-guide/aws/autoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/autoscaling/</guid><description>Introduction Auto Scaling helps you maintain application availability and allows you to automatically add or remove EC2 instances according to the demand. You can use Auto Scaling to ensure that you are running your desired number of instances.
LocalStack allows you to use the Auto Scaling APIs locally to create and manage Auto Scaling groups locally. The supported APIs are available on our API coverage page, which provides information on the extent of Auto Scaling&amp;rsquo;s integration with LocalStack.</description></item><item><title>CloudFront</title><link>/user-guide/aws/cloudfront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudfront/</guid><description>Introduction CloudFront is a content delivery network (CDN) service provided by Amazon Web Services (AWS). CloudFront distributes its web content, videos, applications, and APIs with low latency and high data transfer speeds. CloudFront APIs allow you to configure distributions, customize cache behavior, secure content with access controls, and monitor the CDN&amp;rsquo;s performance through real-time metrics.
LocalStack allows you to use the CloudFront APIs in your local environment to create local CloudFront distributions to transparently access your applications and file artifacts.</description></item><item><title>CodeBuild</title><link>/user-guide/aws/codebuild/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/codebuild/</guid><description>Introduction AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. It is part of the AWS Developer Tools suite and integrates with other AWS services to provide an end-to-end development pipeline.
LocalStack supports the emulation of most of the CodeBuild operations. The supported operations are listed on the API coverage page.
AWS CodeBuild emulation is powered by the AWS CodeBuild agent.</description></item><item><title>CodeCommit</title><link>/user-guide/aws/codecommit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/codecommit/</guid><description>Note AWS has discontinued new feature development for CodeCommit effective 25 July 2024. However, LocalStack will continue making parity improvements. Introduction CodeCommit is a managed source control service by AWS that enables developers to store and collaborate on their code repositories. With CodeCommit, you can host private Git repositories with integrations to other AWS services. You can also use standard Git commands or CodeCommit APIs (using AWS CLI or SDKs) to manage your repositories.</description></item><item><title>Cognito</title><link>/user-guide/aws/cognito/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cognito/</guid><description>Introduction Cognito is a managed identity service provided by AWS that is used for securing user authentication, authorization, and managing user identities in web and mobile applications. Cognito enables developers to add user sign-up, sign-in, and access control functionalities to their applications. Cognito supports various authentication methods, including social identity providers, SAML-based identity providers, and custom authentication flows.
LocalStack allows you to use the Cognito APIs in your local environment to manage authentication and access control for your local application and resources.</description></item><item><title>Elastic Container Registry (ECR)</title><link>/user-guide/aws/ecr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ecr/</guid><description>Introduction Elastic Container Registry (ECR) is a fully managed container registry service provided by Amazon Web Services. ECR enables you to store, manage, and deploy Docker container images to build, store, and deploy containerized applications. ECR integrates with other AWS services, such as Lambda, ECS, and EKS.
LocalStack allows you to use the ECR APIs in your local environment to build &amp;amp; push Docker images to a local ECR registry. The supported APIs are available on our API coverage page, which provides information on the extent of ECR&amp;rsquo;s integration with LocalStack.</description></item><item><title>Elastic Container Service (ECS)</title><link>/user-guide/aws/ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ecs/</guid><description>Introduction Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service provided by Amazon Web Services (AWS). It allows you to run, stop, and manage Docker containers on a cluster. ECS eliminates the need for you to install, operate, and scale your own cluster management infrastructure.
LocalStack allows you to use the ECS APIs in your local environment to create &amp;amp; manage ECS clusters, tasks, and services. The supported APIs are available on our API coverage page, which provides information on the extent of ECS&amp;rsquo;s integration with LocalStack.</description></item><item><title>Elastic Load Balancing (ELB)</title><link>/user-guide/aws/elb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elb/</guid><description>Introduction Elastic Load Balancing (ELB) is a service that allows users to distribute incoming traffic across multiple targets, such as EC2 instances, containers, IP addresses, and lambda functions and automatically scales its request handling capacity in response to incoming traffic. It also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You can check the official AWS documentation to understand the basic terms and concepts used in the ELB.</description></item><item><title>Elastic Transcoder</title><link>/user-guide/aws/elastictranscoder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastictranscoder/</guid><description>Introduction Elastic Transcoder is a managed service that facilitates the transcoding of multimedia files into various formats to ensure compatibility across devices. Elastic Transcoder manages the underlying resources, ensuring high availability and fault tolerance. It also supports a wide range of input and output formats, enabling users to efficiently process and deliver video content at scale.
LocalStack allows you to mock the Elastic Transcoder APIs in your local environment. The supported APIs are available on our API coverage page, which provides information on the extent of Elastic Transcoder&amp;rsquo;s integration with LocalStack.</description></item><item><title>ElastiCache</title><link>/user-guide/aws/elasticache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticache/</guid><description>Introduction Amazon ElastiCache is a managed in-memory caching service provided by Amazon Web Services (AWS). It facilitates the deployment and operation of in-memory caches within the AWS cloud environment. ElastiCache is designed to improve application performance and scalability by alleviating the workload on backend databases. It supports popular open-source caching engines like Redis and Memcached (LocalStack currently supports Redis), providing a means to efficiently store and retrieve frequently accessed data with minimal latency.</description></item><item><title>IoT</title><link>/user-guide/aws/iot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iot/</guid><description>Introduction AWS IoT provides cloud services to manage IoT devices and integrate them with other AWS services.
LocalStack supports IoT Core, IoT Data, IoT Analytics. Common operations for creating and updating things, groups, policies, certificates and other entities are implemented with full CloudFormation support. The supported APIs are available on our API coverage page.
LocalStack ships a Message Queuing Telemetry Transport (MQTT) broker powered by Eclipse Mosquitto which supports both pure MQTT and MQTT-over-WSS (WebSockets Secure) protocols.</description></item><item><title>MQ</title><link>/user-guide/aws/mq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mq/</guid><description>Introduction MQ is a managed message broker service offered by Amazon Web Services (AWS). It facilitates the exchange of messages between various components of distributed applications, enabling reliable and scalable communication. AWS MQ supports popular messaging protocols like MQTT, AMQP, and STOMP, making it suitable for a wide range of messaging use cases.
LocalStack allows you to use the MQ APIs to implement pub/sub messaging, request/response patterns, or distributed event-driven architectures in your local environment.</description></item><item><title>Persistence Coverage for AWS Services</title><link>/user-guide/state-management/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/support/</guid><description>Persistence Coverage Overview Service Supported Persistence Test Suite Limitations accessanalyzer AWS Account Management ACM (AWS Certificate Manager) AWS Private Certificate Authority (CA) ✔️ ✔️ amp Amplify ✔️ ✔️ amplifybackend amplifyuibuilder API Gateway ✔️ ✔️ API Gateway Management API API Gateway v2 ✔️ AppConfig ✔️ AppConfig Data appfabric appflow appintegrations Application Auto Scaling ✔️ ✔️ application-insights application-signals applicationcostprofiler appmesh apprunner appstream AppSync apptest arc-zonal-shift artifact Athena auditmanager Auto Scaling autoscaling-plans b2bi Backup ✔️ ✔️ backup-gateway backupsearch Batch ✔️ bcm-data-exports bcm-pricing-calculator bedrock bedrock-agent bedrock-agent-runtime bedrock-data-automation bedrock-data-automation-runtime bedrock-runtime billing billingconductor braket budgets CE (Cost Explorer API) chatbot chime chime-sdk-identity chime-sdk-media-pipelines chime-sdk-meetings chime-sdk-messaging chime-sdk-voice cleanrooms cleanroomsml cloud9 cloudcontrol clouddirectory CloudFormation ✔️ Users need to be sure that the stacks are completely deployed before saving LocalStack state.</description></item><item><title>Relational Database Service (RDS)</title><link>/user-guide/aws/rds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/rds/</guid><description>Introduction Relational Database Service (RDS) is a managed database service provided by Amazon Web Services (AWS) that allows users to setup, operate, and scale relational databases in the cloud. RDS allows you to deploy and manage various relational database engines like MySQL, PostgreSQL, MariaDB, and Microsoft SQL Server. RDS handles routine database tasks such as provisioning, patching, backup, recovery, and scaling.
LocalStack allows you to use the RDS APIs in your local environment to create and manage RDS clusters and instances for testing &amp;amp; integration purposes.</description></item><item><title>Simple Email Service (SES)</title><link>/user-guide/aws/ses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ses/</guid><description>Introduction Simple Email Service (SES) is an emailing service that can be integrated with other cloud-based services. It provides API to facilitate email templating, sending bulk emails and more.
The supported APIs are available on the API coverage page for SESv1 and SESv2.
Note Users on Free plan can use SES V1 APIs in LocalStack for basic mocking and testing. For advanced features like SMTP integration and other emulation capabilities, please refer to the Ultimate plan.</description></item></channel></rss>