<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Teams Plan on Docs</title><link>/tags/teams-plan/</link><description>Recent content in Teams Plan on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/tags/teams-plan/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Pods</title><link>/user-guide/state-management/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/cloud-pods/</guid><description>Introduction Cloud pods are persistent state snapshots of your LocalStack instance that can easily be stored, versioned, shared, and restored. Cloud Pods can be used for various purposes, such as:
Save and manage snapshots of active LocalStack instances. Share state snapshots with your team to debug collectively. Automate your testing pipelines by pre-seeding CI environments. Create reproducible development and testing environments locally. Installation You can save and load the persistent state of Cloud Pods, you can use the Cloud Pods command-line interface (CLI).</description></item><item><title>CLI command reference</title><link>/user-guide/state-management/pods-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/pods-cli/</guid><description>This reference provides descriptions and example commands for LocalStack Cloud Pods CLI (pod) commands.
Syntax Use the following syntax to run localstack pod commands from your terminal window:
$ localstack pod [OPTIONS] COMMAND [ARGS]... In the above syntax:
COMMAND specifies the operation you want to perform with your Cloud Pods (save or load). OPTIONS specifies the optional flags. ARGS specifies the command arguments. Commands The following section lists the available commands for the Cloud Pods CLI.</description></item><item><title>AWS Replicator</title><link>/user-guide/tools/aws-replicator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/aws-replicator/</guid><description>Introduction Infrastructure deployed on AWS often requires access to shared resources defined externally. For example a VPC defined by another team to contain the application infrastructure. This makes it harder to deploy applications into LocalStack as these resource dependencies must be deployed first. These dependencies may not live in IaC where deployment is easy, or accessing the IaC may not be easy. Some resources may be referred to by ARN, for example Secrets Manager secrets, but these ARNs are partly random meaning that simply creating a new resource in LocalStack will generate a resource with a different ARN.</description></item><item><title>Stack Insights</title><link>/user-guide/web-application/stack-insights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/stack-insights/</guid><description>Introduction LocalStack collects execution events to provide usage analytics and insights into development and testing. Stack Insights let users report AWS API usage telemetry to their LocalStack account.
Stack Insights show which APIs are used, which clients or integrations use specific services and API operations, and which services cause the most API errors.
Note Your privacy matters to us! We only collect anonymized and sanitized data. No sensitive information about your application is ever collected or exposed.</description></item></channel></rss>