<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pro Image on Docs</title><link>/tags/pro-image/</link><description>Recent content in Pro Image on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/tags/pro-image/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started</title><link>/user-guide/extensions/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/getting-started/</guid><description>Introduction MailHog is an open source email testing tool for developers. It provides a simple SMTP server and web interface that allows developers to easily catch and inspect emails sent from their application during development. In this guide, you will install and use the official MailHog extension for LocalStack and send an email through SES, while inspecting it in MailHog.
Prerequisites LocalStack Account AWS CLI Installation To get started, start your LocalStack instance with your LOCALSTACK_AUTH_TOKEN.</description></item><item><title>IAM Policy Enforcement</title><link>/user-guide/security-testing/iam-enforcement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/iam-enforcement/</guid><description>Introduction IAM Policy Enforcement feature can be used to test your security policies and create a more realistic environment that more closely resembles real AWS. The environment configuration ENFORCE_IAM=1 is required while starting LocalStack to enable this feature. Per default, IAM enforcement is disabled, and all APIs can be accessed without authentication.
Getting started This guide is designed for users new to IAM Policy Enforcement and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.</description></item><item><title>Explainable IAM</title><link>/user-guide/security-testing/explainable-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/explainable-iam/</guid><description>Introduction The IAM Policy Engine logs output related to failed policy evaluation directly to the LocalStack logs. You can enable DEBUG=1 to gain visibility into these log messages, allowing you to identify the additional policies required for your request to succeed.
Getting started This guide is designed for users new to Explainable IAM and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.
Start your LocalStack container with the DEBUG=1 and ENFORCE_IAM=1 environment variables set:</description></item><item><title>Managing extensions</title><link>/user-guide/extensions/managing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/managing-extensions/</guid><description>You have different options to install and manage your LocalStack extensions depending on your environment and work style.
Extensions are managed through the LocalStack container, but stored in the LocalStack volume on your host. The next time you start up LocalStack, your extensions will still be there!
Using the extensions manager in our App The easiest way to manage official extensions is through our webapp and our Extension Manager App. Simply install and remove extensions from your specific LocalStack instance directly from the App.</description></item><item><title>Persistence</title><link>/user-guide/state-management/persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/persistence/</guid><description>Introduction LocalStack&amp;rsquo;s Persistence mechanism enables the saving and restoration of the entire LocalStack state, including all AWS resources and data, on your local machine. It functions as a &amp;ldquo;pause and resume&amp;rdquo; feature, allowing you to take a snapshot of your LocalStack instance and save this data to disk. This mechanism ensures a quick and efficient way to preserve and continue your work with AWS resources locally.
Configuration To start snapshot-based persistence, launch LocalStack with the configuration option PERSISTENCE=1.</description></item><item><title>Developing extensions</title><link>/user-guide/extensions/developing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/developing-extensions/</guid><description>Introduction This section provides a brief overview of how to develop your own extensions.
Extensions API LocalStack exposes a Python API for building extensions that can be found in the core codebase in localstack.extensions.api.
The basic interface to implement is as follows:
class Extension(BaseExtension): &amp;#34;&amp;#34;&amp;#34; An extension that is loaded into LocalStack dynamically. The method execution order of an extension is as follows: - on_extension_load - on_platform_start - update_gateway_routes - update_request_handlers - update_response_handlers - on_platform_ready - on_platform_shutdown &amp;#34;&amp;#34;&amp;#34; namespace: str = &amp;#34;localstack.</description></item><item><title>Export &amp; Import State</title><link>/user-guide/state-management/export-import-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/export-import-state/</guid><description>Introduction The Export/Import State feature enables you to export the state of your LocalStack instance into a file and import it into another LocalStack instance. This feature is useful when you want to save your LocalStack instance&amp;rsquo;s state for later use.
LocalStack CLI The LocalStack CLI enables you to export your infrastructure state to a file and import it into another LocalStack instance. You can access the state management commands by running localstack state in your terminal.</description></item><item><title>IAM Policy Stream</title><link>/user-guide/security-testing/iam-policy-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/iam-policy-stream/</guid><description>Introduction The IAM Policy Stream generates a steady stream of policies along with their corresponding principals or resources. When a request is made, it initially displays the principal or resource to which the policy will be attached. This is typically a service resource for resource-based policies, or an IAM principal for other cases. Subsequently, it displays the suggested policy. This feature aids in identifying the correct permissions for cloud applications and can help spot logical errors, such as unexpected actions in a policy.</description></item><item><title>Extensions Library</title><link>/user-guide/extensions/extensions-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/extensions-library/</guid><description>Introduction LocalStack extensions allows you to extend and customize LocalStack. A LocalStack extension is a Python application that runs together with LocalStack within the LocalStack container.
LocalStack extensions are available to licensed users, and the list of available extensions can be found in the Extensions Library.
Installing an Extension To install an extension using the LocalStack Extensions Library, you can navigate to the app.localstack.cloud/extensions/library and click on the Go to Instance button to open the list of available instances.</description></item><item><title>Launchpad</title><link>/user-guide/state-management/launchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/launchpad/</guid><description>The LocalStack Cloud Pods Launchpad enables you to easily share and inject Cloud Pods into a LocalStack instance.
Creating your shareable link You can visit Cloud Pods launchpad to generate a shareable link for your pods.
Enter a public URL to your pod Cloud Pod the first input field, then click Generate Link. You can copy the resulting link and share it with others. Additionally, you have the option to copy a markdown snippet for quickly adding a badge to your repository.</description></item><item><title>Transparent Endpoint Injection</title><link>/user-guide/tools/transparent-endpoint-injection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/transparent-endpoint-injection/</guid><description>Introduction LocalStack provides Transparent Endpoint Injection, which enables seamless connectivity to LocalStack without modifying your application code targeting AWS. The DNS Server resolves AWS domains such as *.amazonaws.com including subdomains to the LocalStack container. Therefore, your application seamlessly accesses the LocalStack APIs instead of the real AWS APIs. For local testing, you might need to disable SSL validation as explained under Self-signed certificates.
Note This feature is enabled when the LocalStack DNS server is used.</description></item><item><title>Event Studio</title><link>/user-guide/tools/event-studio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/event-studio/</guid><description>Introduction Event Studio allows users to view, collect, and inspect data exchanges, including event payloads and metadata, between AWS services. It enhances system observability by displaying the data exchanged at every stage, facilitating clear understanding of event flows. It further centralizes debugging by enabling event replay at any system stage for detailed analysis and troubleshooting. In addition, it serves as a single point of truth to understand potential errors, service configuration mismatches and IAM permission issues.</description></item><item><title>Amplify</title><link>/user-guide/aws/amplify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/amplify/</guid><description>Introduction Amplify is a JavaScript-based development framework with libraries, UI components, and a standard CLI interface for building and deploying web and mobile applications. With Amplify, developers can build and host static websites, single-page applications, and full-stack serverless web applications using an abstraction layer over popular AWS services like DynamoDB, Cognito, AppSync, Lambda, S3, and more.
LocalStack allows you to use the Amplify APIs to build and test their Amplify applications locally.</description></item><item><title>API Gateway</title><link>/user-guide/aws/apigateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/apigateway/</guid><description>Introduction API Gateway is a managed service that enables developers to create, deploy, and manage APIs (Application Programming Interfaces). It allows easy creation of REST, HTTP, and WebSocket APIs to securely access data, business logic, or functionality from backend services like AWS Lambda functions or EC2 instances. API Gateway supports standard HTTP methods such as GET, POST, PUT, PATCH, and DELETE and integrates with various AWS services, including Lambda, Cognito, CloudWatch, and X-Ray.</description></item><item><title>AppConfig</title><link>/user-guide/aws/appconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appconfig/</guid><description>AppConfig is a service provided by Amazon Web Services (AWS) that simplifies the process of managing and deploying application configurations. AppConfig offers centralized management of configuration data and the ability to create, manage, and deploy configuration changes separately. It allows you to avoid deploying the service repeatedly for smaller changes, enables controlled deployments to applications and includes built-in validation checks &amp;amp; monitoring.
LocalStack allows you to use the AppConfig APIs in your local environment to define configurations for different environments and deploy them to your applications as needed.</description></item><item><title>Application Auto Scaling</title><link>/user-guide/aws/applicationautoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/applicationautoscaling/</guid><description>Introduction Application Auto Scaling is a centralized solution for managing automatic scaling by defining scaling policies based on specific metrics. Based on CPU utilization or request rates, it automatically adjusts capacity in response to changes in workload. With Application Auto Scaling, you can configure automatic scaling for services such as DynamoDB, ECS, Lambda, ElastiCache, and more. Auto scaling uses CloudWatch under the hood to configure scalable targets which a service namespace, resource ID, and scalable dimension can uniquely identify.</description></item><item><title>AppSync</title><link>/user-guide/aws/appsync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appsync/</guid><description>Introduction AppSync is a managed service provided by Amazon Web Services (AWS) that enables you to create serverless GraphQL APIs to query databases, microservices, and other APIs. AppSync allows you to define your data models and business logic using a declarative approach, and connect to various data sources, including other AWS services, relational databases, and custom data sources.
LocalStack allows you to use the AppSync APIs in your local environment to connect your applications and services to data and events.</description></item><item><title>Athena</title><link>/user-guide/aws/athena/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/athena/</guid><description>Introduction Athena is an interactive query service provided by Amazon Web Services (AWS) that enables you to analyze data stored in S3 using standard SQL queries. Athena allows users to create ad-hoc queries to perform data analysis, filter, aggregate, and join datasets stored in S3. It supports various file formats, such as JSON, Parquet, and CSV, making it compatible with a wide range of data sources.
LocalStack allows you to configure the Athena APIs with a Hive metastore that can connect to the S3 API and query your data directly in your local environment.</description></item><item><title>Auto Scaling</title><link>/user-guide/aws/autoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/autoscaling/</guid><description>Introduction Auto Scaling helps you maintain application availability and allows you to automatically add or remove EC2 instances according to the demand. You can use Auto Scaling to ensure that you are running your desired number of instances.
LocalStack allows you to use the Auto Scaling APIs locally to create and manage Auto Scaling groups locally. The supported APIs are available on our API coverage page, which provides information on the extent of Auto Scaling&amp;rsquo;s integration with LocalStack.</description></item><item><title>Backup</title><link>/user-guide/aws/backup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/backup/</guid><description>Introduction Backup is a centralized backup service provided by Amazon Web Services. It simplifies the process of backing up and restoring your data across various AWS services and resources. Backup supports a wide range of AWS resources, including Elastic Block Store (EBS) volumes, Relational Database Service (RDS) databases, DynamoDB tables, Elastic File System (EFS) file systems, and more. Backup enables you to set backup retention policies, allowing you to specify how long you want to retain your backup copies.</description></item><item><title>Batch</title><link>/user-guide/aws/batch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/batch/</guid><description>Introduction Batch is a cloud-based service provided by Amazon Web Services (AWS) that simplifies the process of running batch computing workloads on the AWS cloud infrastructure. Batch allows you to efficiently process large volumes of data and run batch jobs without the need to manage and provision underlying compute resources.
LocalStack allows you to use the Batch APIs to automate and scale computational tasks in your local environment while handling batch workloads.</description></item><item><title>CloudFront</title><link>/user-guide/aws/cloudfront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudfront/</guid><description>Introduction CloudFront is a content delivery network (CDN) service provided by Amazon Web Services (AWS). CloudFront distributes its web content, videos, applications, and APIs with low latency and high data transfer speeds. CloudFront APIs allow you to configure distributions, customize cache behavior, secure content with access controls, and monitor the CDN&amp;rsquo;s performance through real-time metrics.
LocalStack allows you to use the CloudFront APIs in your local environment to create local CloudFront distributions to transparently access your applications and file artifacts.</description></item><item><title>CloudTrail</title><link>/user-guide/aws/cloudtrail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudtrail/</guid><description>Introduction CloudTrail is a service provided by Amazon Web Services (AWS) that enables you to track and monitor all activities and events within your AWS environment. It records API calls and actions made on your AWS resources, offering an audit trail that helps you understand changes, diagnose issues, and maintain compliance.
LocalStack allows you to use the CloudTrail APIs in your local environment to create and manage Event history and trails.</description></item><item><title>CodeCommit</title><link>/user-guide/aws/codecommit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/codecommit/</guid><description>Introduction CodeCommit is a managed source control service by AWS that enables developers to store and collaborate on their code repositories. With CodeCommit, you can host private Git repositories with integrations to other AWS services. You can also use standard Git commands or CodeCommit APIs (using AWS CLI or SDKs) to manage your repositories. CodeCommit also uses identity-based policies, which can be attached to IAM users, groups, and roles, ensuring secure and granular access control.</description></item><item><title>Cognito</title><link>/user-guide/aws/cognito/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cognito/</guid><description>Introduction Cognito is a managed identity service provided by AWS that is used for securing user authentication, authorization, and managing user identities in web and mobile applications. Cognito enables developers to add user sign-up, sign-in, and access control functionalities to their applications. Cognito supports various authentication methods, including social identity providers, SAML-based identity providers, and custom authentication flows.
LocalStack allows you to use the Cognito APIs in your local environment to manage authentication and access control for your local application and resources.</description></item><item><title>Cost Explorer</title><link>/user-guide/aws/ce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ce/</guid><description>Introduction Cost Explorer is a service provided by Amazon Web Services (AWS) that enables you to visualize, analyze, and manage your AWS spending and usage. Cost Explorer offers options to filter and group data by dimensions such as service, region, instance type, and more. With Cost Explorer, you can forecast costs, track budget progress, and set up alerts to receive notifications when spending exceeds predefined thresholds.
LocalStack allows you to use the Cost Explorer APIs in your local environment to create and manage cost category definition, cost anomaly monitors &amp;amp; subscriptions.</description></item><item><title>Elastic Beanstalk</title><link>/user-guide/aws/elasticbeanstalk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticbeanstalk/</guid><description>Introduction Elastic Beanstalk (EB) is a managed platform-as-a-service (PaaS) provided by Amazon Web Services (AWS) that simplifies the process of deploying, managing, and scaling web applications and services. Elastic Beanstalk orchestrates various AWS services, including EC2, S3, SNS, and Elastic Load Balancers. Elastic Beanstalk also supports various application environments, such as Java, .NET, Node.js, PHP, Python, Ruby, Go, and Docker.
LocalStack allows you to use the Elastic Beanstalk APIs in your local environment to create and manage applications, environments and versions.</description></item><item><title>Elastic Compute Cloud (EC2)</title><link>/user-guide/aws/ec2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ec2/</guid><description>Introduction Elastic Compute Cloud (EC2) is a core service within Amazon Web Services (AWS) that provides scalable and flexible virtual computing resources. EC2 enables users to launch and manage virtual machines, referred to as instances.
LocalStack allows you to use the EC2 APIs in your local environment to create and manage EC2 instances and related resources such as VPCs, EBS volumes, etc. The list of supported APIs can be found on the API coverage page.</description></item><item><title>Elastic Container Registry (ECR)</title><link>/user-guide/aws/ecr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ecr/</guid><description>Introduction Elastic Container Registry (ECR) is a fully managed container registry service provided by Amazon Web Services. ECR enables you to store, manage, and deploy Docker container images to build, store, and deploy containerized applications. ECR integrates with other AWS services, such as Lambda, ECS, and EKS.
LocalStack allows you to use the ECR APIs in your local environment to build &amp;amp; push Docker images to a local ECR registry. The supported APIs are available on our API coverage page, which provides information on the extent of ECR&amp;rsquo;s integration with LocalStack.</description></item><item><title>Elastic File System (EFS)</title><link>/user-guide/aws/efs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/efs/</guid><description>Introduction Elastic File System (EFS) is a fully managed file storage service provided by Amazon Web Services (AWS). EFS offers scalable and shared file storage that can be accessed by multiple EC2 instances and on-premises servers simultaneously. EFS utilizes the Network File System protocol to allow it to be used as a data source for various applications and workloads.
LocalStack allows you to use the EFS APIs in your local environment to create local file systems, lifecycle configurations, and file system policies.</description></item><item><title>Elastic Kubernetes Service (EKS)</title><link>/user-guide/aws/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/eks/</guid><description>Introduction Elastic Kubernetes Service (EKS) is a managed Kubernetes service that makes it easy to run Kubernetes on AWS without installing, operating, and maintaining your own Kubernetes control plane or worker nodes. Kubernetes is an open-source system for automating containerized applications&amp;rsquo; deployment, scaling, and management.
LocalStack allows you to use the EKS APIs in your local environment to spin up embedded Kubernetes clusters in your local Docker engine or use an existing Kubernetes installation you can access from your local machine (defined in $HOME/.</description></item><item><title>Elastic Load Balancing (ELB)</title><link>/user-guide/aws/elb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elb/</guid><description>Introduction Elastic Load Balancing (ELB) is a service that allows users to distribute incoming traffic across multiple targets, such as EC2 instances, containers, IP addresses, and lambda functions and automatically scales its request handling capacity in response to incoming traffic. It also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You can check the official AWS documentation to understand the basic terms and concepts used in the ELB.</description></item><item><title>Elastic Transcoder</title><link>/user-guide/aws/elastictranscoder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastictranscoder/</guid><description>Introduction Elastic Transcoder is a managed service that facilitates the transcoding of multimedia files into various formats to ensure compatibility across devices. Elastic Transcoder manages the underlying resources, ensuring high availability and fault tolerance. It also supports a wide range of input and output formats, enabling users to efficiently process and deliver video content at scale.
LocalStack allows you to mock the Elastic Transcoder APIs in your local environment. The supported APIs are available on our API coverage page, which provides information on the extent of Elastic Transcoder&amp;rsquo;s integration with LocalStack.</description></item><item><title>Elemental MediaConvert</title><link>/user-guide/aws/elementalmediaconvert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elementalmediaconvert/</guid><description>Introduction Elemental MediaConvert is a file-based video transcoding service with broadcast-grade features. It enables you to easily create high-quality video streams for broadcast and multiscreen delivery.
LocalStack allows you to mock the MediaConvert APIs in your local environment. The supported APIs are available on our API coverage page, which provides information on the extent of MediaConvert&amp;rsquo;s integration with LocalStack.
Note Elemental MediaConvert is in a preview state. Getting started This guide is designed for users new to Elemental MediaConvert and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.</description></item><item><title>Elemental MediaStore</title><link>/user-guide/aws/mediastore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mediastore/</guid><description>Introduction MediaStore is a scalable and highly available object storage service designed specifically for media content. It provides a reliable way to store, manage, and serve media assets, such as audio, video, and images, with low latency and high performance. MediaStore seamlessly integrates with other AWS services like Elemental MediaConvert, Elemental MediaLive, Elemental MediaPackage, and CloudFront.
LocalStack allows you to use the Elemental MediaStore APIs as a high-performance storage solution for media content in your local environment.</description></item><item><title>EventBridge Pipes</title><link>/user-guide/aws/pipes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/pipes/</guid><description>Introduction EventBridge Pipes allows users to create point-to-point integrations between event producers and consumers with transform, filter and enrichment steps. Pipes are particularly useful for scenarios involving real-time data processing, application integration, and automated workflows, while simplifying the process of routing events between AWS services. Pipes offer a point-to-point connection from one source to one target (one-to-one). In contrast, EventBridge Event Bus offers a one-to-many integration where an event router delivers one event to zero or more destinations.</description></item><item><title>Glacier</title><link>/user-guide/aws/glacier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glacier/</guid><description>Introduction Glacier is a data storage service provided by Amazon Web Services to suit the long-term storage of archives and backup of infrequently accessed data. It offers various retrieval options, different levels of retrieval speed, and more. Glacier uses a Vault container to store your data, similar to how S3 stores data in Buckets. A Vault further holds the data in an Archive, which can contain text, images, video, and audio files.</description></item><item><title>Glue</title><link>/user-guide/aws/glue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glue/</guid><description>Introduction The Glue API in LocalStack Pro allows you to run ETL (Extract-Transform-Load) jobs locally, maintaining table metadata in the local Glue data catalog, and using the Spark ecosystem (PySpark/Scala) to run data processing workflows.
LocalStack allows you to use the Glue APIs in your local environment. The supported APIs are available on our API coverage page, which provides information on the extent of Glue&amp;rsquo;s integration with LocalStack.
Getting started This guide is designed for users new to Glue and assumes basic knowledge of the AWS CLI and our awslocal wrapper script.</description></item><item><title>Identity Store</title><link>/user-guide/aws/identitystore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/identitystore/</guid><description>Introduction Identity Store is a managed service that enables the creation and management of groups within your AWS environment. Groups are used to manage access to AWS resources, and Identity Store provides a central location to create and manage groups across your AWS accounts.
LocalStack allows you to use the Identity Store APIs to create and manage groups in your local environment. The supported APIs are available on our API Coverage Page, which provides information on the extent of Identity Store integration with LocalStack.</description></item><item><title>IoT Wireless</title><link>/user-guide/aws/iotwireless/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iotwireless/</guid><description>Introduction AWS IoT Wireless is a managed service that enables customers to connect and manage wireless devices. The service provides a set of APIs to manage wireless devices, gateways, and destinations.
LocalStack allows you to use the IoT Wireless APIs in your local environment from creating wireless devices and gateways. The supported APIs are available on our API coverage page, which provides information on the extent of IoT Wireless&amp;rsquo;s integration with LocalStack.</description></item><item><title>Kinesis Data Analytics for SQL Applications</title><link>/user-guide/aws/kinesisanalytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesisanalytics/</guid><description>Warning This service is deprecated and marked for removal. Introduction Kinesis Data Analytics for SQL Applications is a service offered by Amazon Web Services (AWS) that enables you to process and analyze streaming data in real-time. It allows you to apply transformations, filtering, and enrichment to streaming data using standard SQL syntax.
LocalStack allows you to use the Kinesis Data Analytics APIs in your local environment. The API coverage is available on:</description></item><item><title>Managed Blockchain (AMB)</title><link>/user-guide/aws/managedblockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/managedblockchain/</guid><description>Managed Blockchain (AMB) is a managed service that enables the creation and management of blockchain networks, such as Hyperledger Fabric, Bitcoin, Polygon and Ethereum. Blockchain enables the development of applications in which multiple entities can conduct transactions and exchange data securely and transparently, eliminating the requirement for a central, trusted authority.
LocalStack allows you to use the AMB APIs to develop and deploy decentralized applications in your local environment. The supported APIs are available on our API Coverage Page, which provides information on the extent of AMB integration with LocalStack.</description></item><item><title>Managed Service for Apache Flink</title><link>/user-guide/aws/kinesisanalyticsv2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesisanalyticsv2/</guid><description>Note This service was formerly known as &amp;lsquo;Kinesis Data Analytics for Apache Flink&amp;rsquo;. Introduction Apache Flink is a framework for building applications that process and analyze streaming data. Managed Service for Apache Flink (MSF) is an AWS service that provides the underlying infrastructure and a hosted Apache Flink cluster that can run Apache Flink applications.
LocalStack lets you to run Flink applications locally and implements several AWS-compatible API operations.</description></item><item><title>Managed Streaming for Kafka (MSK)</title><link>/user-guide/aws/msk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/msk/</guid><description>Introduction Managed Streaming for Apache Kafka (MSK) is a fully managed Apache Kafka service that allows you to build and run applications that process streaming data. MSK offers a centralized platform to facilitate seamless communication between various AWS services and applications through event-driven architectures, facilitating data ingestion, processing, and analytics for various applications. MSK also features automatic scaling and built-in monitoring, allowing users to build robust, high-throughput data pipelines.
LocalStack allows you to use the MSK APIs in your local environment to spin up Kafka clusters on the local machine, create topics for exchanging messages, and define event source mappings that trigger Lambda functions when messages are received on a certain topic.</description></item><item><title>Managed Workflows for Apache Airflow (MWAA)</title><link>/user-guide/aws/mwaa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mwaa/</guid><description>Introduction Managed Workflows for Apache Airflow (MWAA) is a fully managed service by AWS that simplifies the deployment, management, and scaling of Apache Airflow workflows in the cloud. MWAA leverages the familiar Airflow features and integrations while integrating with S3, Glue, Redshift, Lambda, and other AWS services to build data pipelines and orchestrate data processing workflows in the cloud.
LocalStack allows you to use the MWAA APIs in your local environment to allow the setup and operation of data pipelines.</description></item><item><title>MQ</title><link>/user-guide/aws/mq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mq/</guid><description>Introduction MQ is a managed message broker service offered by Amazon Web Services (AWS). It facilitates the exchange of messages between various components of distributed applications, enabling reliable and scalable communication. AWS MQ supports popular messaging protocols like MQTT, AMQP, and STOMP, making it suitable for a wide range of messaging use cases.
LocalStack allows you to use the MQ APIs to implement pub/sub messaging, request/response patterns, or distributed event-driven architectures in your local environment.</description></item><item><title>Neptune</title><link>/user-guide/aws/neptune/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/neptune/</guid><description>Introduction Neptune is a fully managed, highly available, and scalable graph database service offered by AWS. It is designed for storing and querying highly connected data for applications that require complex relationship modeling, such as social networks, recommendation engines, and fraud detection. Neptune supports popular graph query languages like Gremlin and SPARQL, making it compatible with a wide range of graph applications and tools.
LocalStack allows you to use the Neptune APIs in your local environment to support both property graph and RDF graph models.</description></item><item><title>Persistence Coverage for AWS Services</title><link>/user-guide/state-management/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/support/</guid><description>Persistence Coverage Overview Service Supported Persistence Test Suite Limitations accessanalyzer AWS Account Management ACM (AWS Certificate Manager) AWS Private Certificate Authority (CA) ✔️ ✔️ amp Amplify ✔️ ✔️ amplifybackend amplifyuibuilder API Gateway ✔️ ✔️ API Gateway Management API API Gateway v2 ✔️ AppConfig ✔️ AppConfig Data appfabric appflow appintegrations Application Auto Scaling ✔️ ✔️ application-insights application-signals applicationcostprofiler appmesh apprunner appstream AppSync apptest arc-zonal-shift artifact Athena auditmanager Auto Scaling autoscaling-plans b2bi Backup ✔️ ✔️ backup-gateway backupsearch Batch ✔️ bcm-data-exports bcm-pricing-calculator bedrock bedrock-agent bedrock-agent-runtime bedrock-data-automation bedrock-data-automation-runtime bedrock-runtime billing billingconductor braket budgets CE (Cost Explorer API) chatbot chime chime-sdk-identity chime-sdk-media-pipelines chime-sdk-meetings chime-sdk-messaging chime-sdk-voice cleanrooms cleanroomsml cloud9 cloudcontrol clouddirectory CloudFormation ✔️ Users need to be sure that the stacks are completely deployed before saving LocalStack state.</description></item><item><title>Pinpoint</title><link>/user-guide/aws/pinpoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/pinpoint/</guid><description>Introduction Pinpoint is a customer engagement service to facilitate communication across multiple channels, including email, SMS, and push notifications. Pinpoint allows developers to create and manage customer segments based on various attributes, such as user behavior and demographics, while integrating with other AWS services to send targeted messages to customers.
LocalStack allows you to mock the Pinpoint APIs in your local environment. The supported APIs are available on our API coverage page, which provides information on the extent of Pinpoint&amp;rsquo;s integration with LocalStack.</description></item><item><title>Private Certificate Authority (ACM PCA)</title><link>/user-guide/aws/pca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/pca/</guid><description>Introduction AWS Private Certificate Authority (ACM PCA) is a managed private Certificate Authority (CA) service that manages the lifecycle of your private certificates. ACM PCA extends ACM&amp;rsquo;s certificate management capabilities to private certificates, enabling you to manage public and private certificates centrally.
LocalStack allows you to use the ACM PCA APIs to create, list, and delete private certificates. You can creating, describing, tagging, and listing tags for a CA using ACM PCA.</description></item><item><title>Quantum Ledger Database (QLDB)</title><link>/user-guide/aws/qldb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/qldb/</guid><description>Introduction Amazon Quantum Ledger Database is a fully managed ledger database service offered by Amazon Web Services. It is designed to provide transparent, immutable, and cryptographically verifiable transaction log functionality to applications. QLDB is particularly useful for applications that need a secure and scalable way to maintain a complete and verifiable history of data changes over time.
LocalStack allows you to use the QLDB APIs in your local environment to create and manage ledgers.</description></item><item><title>Redshift</title><link>/user-guide/aws/redshift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/redshift/</guid><description>Introduction RedShift is a cloud-based data warehouse solution which allows end users to aggregate huge volumes of data and parallel processing of data. RedShift is fully managed by AWS and serves as a petabyte-scale service which allows users to create visualization reports and critically analyze collected data. The query results can be saved to an S3 Data Lake while additional analytics can be provided by Athena or SageMaker.
LocalStack allows you to use the RedShift APIs in your local environment to analyze structured and semi-structured data across local data warehouses and data lakes.</description></item><item><title>Relational Database Service (RDS)</title><link>/user-guide/aws/rds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/rds/</guid><description>Introduction Relational Database Service (RDS) is a managed database service provided by Amazon Web Services (AWS) that allows users to setup, operate, and scale relational databases in the cloud. RDS allows you to deploy and manage various relational database engines like MySQL, PostgreSQL, MariaDB, and Microsoft SQL Server. RDS handles routine database tasks such as provisioning, patching, backup, recovery, and scaling.
LocalStack allows you to use the RDS APIs in your local environment to create and manage RDS clusters and instances for testing &amp;amp; integration purposes.</description></item><item><title>SageMaker</title><link>/user-guide/aws/sagemaker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/sagemaker/</guid><description>Introduction Amazon SageMaker is a fully managed service provided by Amazon Web Services (AWS) that provides the tools to build, train, and deploy machine-learning models in the cloud for predictive analytics applications. It streamlines the machine learning development process, reduces the time and effort required to build and deploy models, and offers the scalability and flexibility needed for large-scale machine learning projects in the AWS cloud.
LocalStack Pro provides a local version of the SageMaker API, which allows running jobs to create machine learning models (e.</description></item><item><title>Serverless Application Repository</title><link>/user-guide/aws/serverlessrepo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/serverlessrepo/</guid><description>Introduction Serverless Application Repository allows developers to discover, deploy, and share serverless applications and components. Using Serverless Application Repository, developers can build &amp;amp; publish applications and components once and share them across the community and organizations, making them accessible to others. Serverless Application Repository provides a user-friendly interface to search, filter, and browse through a diverse catalog of serverless applications.
LocalStack allows you to use the Serverless Application Repository APIs in your local environment to create, update, delete, and list serverless applications and components.</description></item><item><title>Service Discovery</title><link>/user-guide/aws/servicediscovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/servicediscovery/</guid><description>Introduction Service Discovery simplifies the management and discovery of services by locating and connecting to the components and resources that make up their applications. Service Discovery allows for a centralized mechanism for dynamically registering, tracking, and resolving service instances, allowing seamless communication between services. Service discovery uses Cloud Map API actions to manage HTTP and DNS namespaces for services, enabling automatic registration and discovery of services running in the cluster.</description></item><item><title>Simple Email Service (SES)</title><link>/user-guide/aws/ses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ses/</guid><description>Introduction Simple Email Service (SES) is an emailing service that can be integrated with other cloud-based services. It provides API to facilitate email templating, sending bulk emails and more.
LocalStack supports SES v1 in the Community image, while SES v2 and SMTP integration is supported in the Pro image. The supported APIs are available on the API coverage page for SES v1 and SES v2.
Getting Started This is an introductory guide to get started with SES.</description></item><item><title>Systems Manager (SSM)</title><link>/user-guide/aws/ssm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ssm/</guid><description>Introduction Systems Manager (SSM) is a management service provided by Amazon Web Services that helps you effectively manage and control your infrastructure resources. SSM simplifies tasks related to system and application management, patching, configuration, and automation, allowing you to maintain the health and compliance of your environment.
LocalStack allows you to use the SSM APIs in your local environment to run operational tasks on the Dockerized instances. The supported APIs are available on our API coverage page, which provides information on the extent of SSM&amp;rsquo;s integration with LocalStack.</description></item><item><title>Textract</title><link>/user-guide/aws/textract/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/textract/</guid><description>Textract is a machine learning service that automatically extracts text, forms, and tables from scanned documents. It simplifies the process of extracting valuable information from a variety of document types, enabling applications to quickly analyze and understand document content.
LocalStack allows you to mock Textract APIs in your local environment. The supported APIs are available on our API coverage page, providing details on the extent of Textract&amp;rsquo;s integration with LocalStack.</description></item><item><title>Timestream</title><link>/user-guide/aws/timestream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/timestream/</guid><description>Introduction LocalStack contains basic support for Timestream time series databases, including these operations:
Creating databases Creating tables Writing records to tables Querying timeseries data from tables The supported APIs are available on our API Coverage Page (Timestream-Query/Timestream-Write), which provides information on the extent of Timestream integration with LocalStack.
Getting Started The following example illustrates the basic operations, using the awslocal command line.
First, we create a test database and table:</description></item><item><title>Web Application Firewall (WAF)</title><link>/user-guide/aws/waf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/waf/</guid><description>Introduction Web Application Firewall (WAF) is a service provided by Amazon Web Services (AWS) that helps protect your web applications from common web exploits that could affect application availability, compromise security, or consume excessive resources. WAFv2 is the latest version of WAF, and it allows you to specify a single set of rules to protect your web applications, APIs, and mobile applications from common attack patterns, such as SQL injection and cross-site scripting.</description></item><item><title>X-Ray</title><link>/user-guide/aws/xray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/xray/</guid><description>Introduction X-Ray is a distributed tracing service that helps to understand cross-service interactions and facilitates debugging of performance bottlenecks. Instrumented applications generate trace data by recording trace segments with information about the work tasks of an application, such as timestamps, tasks names, or metadata. X-Ray supports different ways of instrumenting your application including the AWS X-Ray SDK and the AWS Distro for OpenTelemetry (ADOT). X-Ray daemon is an application that gathers raw trace segment data from the X-Ray SDK and relays it to the AWS X-Ray API.</description></item></channel></rss>