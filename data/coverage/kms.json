{
  "service": "kms",
  "community_support": true,
  "operations": [
    {
      "CancelKeyDeletion": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ConnectCustomKeyStore": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateAlias": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCustomKeyStore": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateGrant": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "Decrypt": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteAlias": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteCustomKeyStore": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteImportedKeyMaterial": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeriveSharedSecret": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCustomKeyStores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableKeyRotation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DisconnectCustomKeyStore": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableKeyRotation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "Encrypt": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateDataKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateDataKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateDataKeyPairWithoutPlaintext": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateDataKeyWithoutPlaintext": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateMac": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GenerateRandom": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetKeyPolicy": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetKeyRotationStatus": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetParametersForImport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetPublicKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportKeyMaterial": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListAliases": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListGrants": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListKeyPolicies": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListKeyRotations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListKeys": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListResourceTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListRetirableGrants": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "PutKeyPolicy": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ReEncrypt": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplicateKey": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RetireGrant": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RevokeGrant": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RotateKeyOnDemand": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ScheduleKeyDeletion": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "Sign": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "TagResource": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UntagResource": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateAlias": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateCustomKeyStore": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateKeyDescription": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdatePrimaryRegion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "Verify": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "VerifyMac": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    }
  ],
  "details": {
    "CreateAlias": {
      "AliasName, TargetKeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key_alias",
            "test": "test_create_key_alias",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateKey": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_enforce_policy_kms",
            "test": "test_enforce_policy_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/test_crypto.py::test_encrypt_via_aws_encryption_sdk",
            "test": "test_encrypt_via_aws_encryption_sdk",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_enforce_policy_kms",
            "test": "test_enforce_policy_kms",
            "response": "400",
            "error": "AccessDeniedException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_all_services_in_region",
            "test": "test_fault_all_services_in_region",
            "response": "503",
            "error": "ServiceUnavailable",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_specific_services_in_regions",
            "test": "test_fault_specific_services_in_regions",
            "response": "503",
            "error": "ServiceUnavailable",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "BypassPolicyLockoutSafetyCheck, Description, KeySpec, KeyUsage, MultiRegion, Origin, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CustomerMasterKeySpec, Description, KeySpec, KeyUsage, MultiRegion, Origin, Policy, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "Description": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_list_keys",
            "test": "test_list_keys",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NextToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[None-testuser-user_attributes2]",
            "test": "test_token_claims_with_username_attributes[None-testuser-user_attributes2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[email-test@example.com-user_attributes0]",
            "test": "test_token_claims_with_username_attributes[email-test@example.com-user_attributes0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[phone_number-+15555555555-user_attributes1]",
            "test": "test_token_claims_with_username_attributes[phone_number-+15555555555-user_attributes1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password_with_kms_key",
            "test": "test_create_db_cluster_manage_master_user_password_with_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/secretsmanager/test_secrets_replication.py::TestSecretsReplication::test_secrets_replication_kms",
            "test": "test_secrets_replication_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Description, KeySpec, KeyUsage": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Description, Policy": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "Description, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key",
            "test": "test_create_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key_alias",
            "test": "test_create_key_alias",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "KeySpec, Policy": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "Decrypt": {
      "CiphertextBlob, EncryptionContext, KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/test_crypto.py::test_encrypt_via_aws_encryption_sdk",
            "test": "test_encrypt_via_aws_encryption_sdk",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteAlias": {
      "AliasName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeKey": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key",
            "test": "test_create_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password",
            "test": "test_modify_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password",
            "test": "test_create_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password",
            "test": "test_create_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password",
            "test": "test_modify_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key_not_found",
            "test": "test_read_key_not_found",
            "response": "400",
            "error": "NotFoundException",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "400",
            "error": "AccessDeniedException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DisableKeyRotation": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "EnableKey": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "EnableKeyRotation": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "Encrypt": {
      "EncryptionAlgorithm, KeyId, Plaintext": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "400",
            "error": "AccessDeniedException",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GenerateDataKey": {
      "EncryptionContext, KeyId, NumberOfBytes": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/test_crypto.py::test_encrypt_via_aws_encryption_sdk",
            "test": "test_encrypt_via_aws_encryption_sdk",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "GetKeyPolicy": {
      "KeyId, PolicyName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "GetKeyRotationStatus": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "ListAliases": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key_alias",
            "test": "test_create_key_alias",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password",
            "test": "test_modify_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password",
            "test": "test_create_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password",
            "test": "test_modify_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "ListKeys": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_all_services_in_region",
            "test": "test_fault_all_services_in_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Limit": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_list_keys",
            "test": "test_list_keys",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NextToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "ListResourceTags": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "PutKeyPolicy": {
      "KeyId, Policy, PolicyName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ScheduleKeyDeletion": {
      "KeyId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestTriggers::test_cognito_custom_email_signup",
            "test": "test_cognito_custom_email_signup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..request.type', '$..request.userAttributes.email_verified', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key",
            "test": "test_create_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kms/test_kms.py::TestKMS::test_create_key_alias",
            "test": "test_create_key_alias",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "KeyId, PendingWindowInDays": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_list_keys",
            "test": "test_list_keys",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NextToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_kms/test_cloudcontrol_kms_key.py::test_read_key",
            "test": "test_read_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[None-testuser-user_attributes2]",
            "test": "test_token_claims_with_username_attributes[None-testuser-user_attributes2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[email-test@example.com-user_attributes0]",
            "test": "test_token_claims_with_username_attributes[email-test@example.com-user_attributes0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cognito/test_cognito.py::TestCognito::test_token_claims_with_username_attributes[phone_number-+15555555555-user_attributes1]",
            "test": "test_token_claims_with_username_attributes[phone_number-+15555555555-user_attributes1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..origin_jti', \"$..'cognito:user_status'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_cross_account.py::TestLambdaCrossAccount::test_kms_cross_account_encrypt",
            "test": "test_kms_cross_account_encrypt",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message', '$..Role.Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementResourceBasedPolicies::test_kms_key",
            "test": "test_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password_with_kms_key",
            "test": "test_create_db_cluster_manage_master_user_password_with_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/kms/test_kms_replication.py::TestKmsSecretReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/secretsmanager/test_secrets_replication.py::TestSecretsReplication::test_secrets_replication_kms",
            "test": "test_secrets_replication_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    }
  }
}