{
  "service": "codedeploy",
  "pro_support": true,
  "operations": [
    {
      "AddTagsToOnPremisesInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetApplicationRevisions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetApplications": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetDeploymentGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetDeploymentInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetDeploymentTargets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetDeployments": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "BatchGetOnPremisesInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ContinueDeployment": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateApplication": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDeployment": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDeploymentConfig": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDeploymentGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteApplication": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteDeploymentConfig": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteDeploymentGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteGitHubAccountToken": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteResourcesByExternalId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterOnPremisesInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetApplication": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetApplicationRevision": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDeployment": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDeploymentConfig": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDeploymentGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDeploymentInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDeploymentTarget": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetOnPremisesInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListApplicationRevisions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListApplications": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListDeploymentConfigs": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListDeploymentGroups": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListDeploymentInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListDeploymentTargets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListDeployments": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ListGitHubAccountTokenNames": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListOnPremisesInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListTagsForResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "PutLifecycleEventHookExecutionStatus": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterApplicationRevision": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterOnPremisesInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RemoveTagsFromOnPremisesInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SkipWaitTimeForInstanceTermination": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StopDeployment": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "TagResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "UntagResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateApplication": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateDeploymentGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    }
  ],
  "details": {
    "ContinueDeployment": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "DeploymentIdRequiredException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "deploymentId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateApplication": {
      "applicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_application.py::test_read_and_list_application",
            "test": "test_read_and_list_application",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, computePlatform": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "400",
            "error": "ApplicationAlreadyExistsException",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, computePlatform, tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_resource_tags",
            "test": "test_resource_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateDeployment": {
      "applicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "DeploymentGroupNameRequiredException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, deploymentGroupName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "RevisionRequiredException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, deploymentGroupName, revision": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "DeploymentGroupDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateDeploymentConfig": {
      "computePlatform, deploymentConfigName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "400",
            "error": "InvalidMinimumHealthyHostValueException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "400",
            "error": "InvalidTrafficRoutingConfigurationException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "computePlatform, deploymentConfigName, minimumHealthyHosts": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "400",
            "error": "DeploymentConfigAlreadyExistsException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "computePlatform, deploymentConfigName, trafficRoutingConfig": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "deploymentConfigName, minimumHealthyHosts": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_deployment_config.py::test_read_and_list_deployment_config",
            "test": "test_read_and_list_deployment_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateDeploymentGroup": {
      "applicationName, autoRollbackConfiguration, blueGreenDeploymentConfiguration, deploymentConfigName, deploymentGroupName, deploymentStyle, ecsServices, loadBalancerInfo, serviceRoleArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, blueGreenDeploymentConfiguration, deploymentConfigName, deploymentGroupName, deploymentStyle, ecsServices, loadBalancerInfo, serviceRoleArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "applicationName, deploymentConfigName, deploymentGroupName, ec2TagFilters, serviceRoleArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "applicationName, deploymentGroupName, serviceRoleArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "DeploymentGroupAlreadyExistsException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteApplication": {
      "applicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_resource_tags",
            "test": "test_resource_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteDeploymentConfig": {
      "deploymentConfigName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteDeploymentGroup": {
      "applicationName, deploymentGroupName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetApplication": {
      "applicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_application.py::test_read_and_list_application",
            "test": "test_read_and_list_application",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetDeployment": {
      "deploymentId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "InvalidDeploymentIdException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "400",
            "error": "DeploymentDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetDeploymentConfig": {
      "deploymentConfigName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_deployment_config.py::test_read_and_list_deployment_config",
            "test": "test_read_and_list_deployment_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "DeploymentConfigDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "DeploymentConfigDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "400",
            "error": "DeploymentConfigDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "400",
            "error": "DeploymentConfigDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetDeploymentGroup": {
      "applicationName, deploymentGroupName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "DeploymentGroupDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "400",
            "error": "DeploymentGroupDoesNotExistException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "DeploymentGroupDoesNotExistException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListApplications": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_application.py::test_read_and_list_application",
            "test": "test_read_and_list_application",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListDeploymentConfigs": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_deployment_config.py::test_read_and_list_deployment_config",
            "test": "test_read_and_list_deployment_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_configs_crud",
            "test": "test_deployment_configs_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListDeploymentGroups": {
      "applicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListDeployments": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployments_crud",
            "test": "test_deployments_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListTagsForResource": {
      "ResourceArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_application.py::test_read_and_list_application",
            "test": "test_read_and_list_application",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_codedeploy/test_deployment_config.py::test_read_and_list_deployment_config",
            "test": "test_read_and_list_deployment_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.ComputePlatform']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_codedeploy.py::test_codedeploy_stack",
            "test": "test_codedeploy_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentConfigInfo.computePlatform', '$..application.linkedToGitHub', '$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_resource_tags",
            "test": "test_resource_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "PutLifecycleEventHookExecutionStatus": {
      "deploymentId, lifecycleEventHookExecutionId, status": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_put_lifecycle_event_hook",
            "test": "test_put_lifecycle_event_hook",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "StopDeployment": {
      "deploymentId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_stop_continue_deployment",
            "test": "test_stop_continue_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "TagResource": {
      "ResourceArn, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_resource_tags",
            "test": "test_resource_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UntagResource": {
      "ResourceArn, TagKeys": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_resource_tags",
            "test": "test_resource_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UpdateApplication": {
      "applicationName, newApplicationName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "400",
            "error": "ApplicationAlreadyExistsException",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_applications_crud",
            "test": "test_applications_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..application.linkedToGitHub']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UpdateDeploymentGroup": {
      "applicationName, currentDeploymentGroupName, newDeploymentGroupName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "ApplicationDoesNotExistException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "400",
            "error": "DeploymentGroupDoesNotExistException",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "applicationName, currentDeploymentGroupName, terminationHookEnabled": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/codedeploy/test_codedeploy.py::TestCodeDeploy::test_deployment_groups_crud",
            "test": "test_deployment_groups_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..deploymentGroupInfo.ec2TagFilters', '$..deploymentGroupInfo.onPremisesInstanceTagFilters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    }
  }
}