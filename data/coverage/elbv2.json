{
  "service": "elbv2",
  "pro_support": true,
  "operations": [
    {
      "AddListenerCertificates": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AddTags": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateListener": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLoadBalancer": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateRule": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTargetGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteListener": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLoadBalancer": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteRule": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTargetGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterTargets": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAccountLimits": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeListenerCertificates": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeListeners": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLoadBalancerAttributes": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLoadBalancers": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeRules": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSSLPolicies": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTags": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTargetGroupAttributes": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTargetGroups": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTargetHealth": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyListener": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyLoadBalancerAttributes": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyRule": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTargetGroup": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTargetGroupAttributes": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterTargets": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "RemoveListenerCertificates": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RemoveTags": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SetIpAddressType": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "SetRulePriorities": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SetSecurityGroups": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SetSubnets": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    }
  ],
  "details": {
    "CreateListener": {
      "DefaultActions, LoadBalancerArn, Port, Protocol": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateLoadBalancer": {
      "IpAddressType, Name, Scheme, Subnets, Tags, Type": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "IpAddressType, Name, SecurityGroups, Subnets, Type": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, Scheme, SecurityGroups, Subnets": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Name, Scheme, SecurityGroups, Subnets, Type": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, SecurityGroups, Subnets": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, Subnets, Type": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateRule": {
      "Actions, Conditions, ListenerArn, Priority": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateTargetGroup": {
      "HealthCheckEnabled, Name, Port, Protocol, TargetType, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "HealthCheckEnabled, Name, TargetType": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "HealthCheckIntervalSeconds, HealthCheckPath, HealthCheckProtocol, HealthCheckTimeoutSeconds, HealthyThresholdCount, Name, Port, Protocol, TargetType, UnhealthyThresholdCount, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "HealthCheckIntervalSeconds, HealthCheckPath, HealthCheckProtocol, HealthCheckTimeoutSeconds, HealthyThresholdCount, Name, Port, Protocol, UnhealthyThresholdCount, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Name, Port, Protocol, TargetType": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "ValidationError",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, Port, Protocol, TargetType, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Name, Port, TargetType": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "ValidationError",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, Protocol, TargetType": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "ValidationError",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "ValidationError",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Name, TargetType, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "ValidationError",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteListener": {
      "ListenerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteLoadBalancer": {
      "LoadBalancerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteRule": {
      "RuleArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteTargetGroup": {
      "TargetGroupArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeregisterTargets": {
      "TargetGroupArn, Targets": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeListeners": {
      "LoadBalancerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeLoadBalancerAttributes": {
      "LoadBalancerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeLoadBalancers": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "LoadBalancerArns": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeRules": {
      "ListenerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeTargetGroups": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeTargetHealth": {
      "TargetGroupArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifyLoadBalancerAttributes": {
      "Attributes, LoadBalancerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ModifyTargetGroupAttributes": {
      "Attributes, TargetGroupArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "RegisterTargets": {
      "TargetGroupArn, Targets": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "SetIpAddressType": {
      "IpAddressType, LoadBalancerArn": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    }
  }
}