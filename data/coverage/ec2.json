{
  "service": "ec2",
  "community_support": true,
  "operations": [
    {
      "AcceptAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptReservedInstancesExchangeQuote": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptTransitGatewayVpcAttachment": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AcceptVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AdvertiseByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AllocateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "AllocateHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AllocateIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ApplySecurityGroupsToClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssignIpv6Addresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssignPrivateIpAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssignPrivateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateEnclaveCertificateIamRole": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateIamInstanceProfile": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateSubnetCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateTrunkInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AssociateVpcCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachClassicLinkVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AttachVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AuthorizeClientVpnIngress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "AuthorizeSecurityGroupEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "AuthorizeSecurityGroupIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "BundleInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelBundleTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelCapacityReservationFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelConversionTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelExportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelImageLaunchPermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelImportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelReservedInstancesListing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelSpotFleetRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CancelSpotInstanceRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ConfirmProductInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CopyFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CopyImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CopySnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCapacityReservationFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCarrierGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateClientVpnRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCoipPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateCustomerGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDefaultSubnet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDefaultVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateEgressOnlyInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateFleet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateInstanceConnectEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateInstanceExportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLaunchTemplateVersion": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLocalGatewayRouteTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateLocalGatewayRouteTableVpcAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNatGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkAcl": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkInsightsAccessScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkInsightsPath": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateNetworkInterfacePermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreatePlacementGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreatePublicIpv4Pool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateReplaceRootVolumeTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateReservedInstancesListing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateRestoreImageTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSecurityGroup": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSnapshots": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSpotDatafeedSubscription": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateStoreImageTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSubnet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateSubnetCidrReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTrafficMirrorFilter": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTrafficMirrorTarget": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayConnect": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayConnectPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayRouteTableAnnouncement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpcEndpoint": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpcEndpointConnectionNotification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpcEndpointServiceConfiguration": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpnConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpnConnectionRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "CreateVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteCarrierGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteClientVpnRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteCoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteCoipPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteCustomerGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteEgressOnlyInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteFleets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteInstanceConnectEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLaunchTemplateVersions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLocalGatewayRouteTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteLocalGatewayRouteTableVpcAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNatGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkAcl": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInsightsAccessScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInsightsAccessScopeAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInsightsAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInsightsPath": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteNetworkInterfacePermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeletePlacementGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeletePublicIpv4Pool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteQueuedReservedInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSecurityGroup": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSpotDatafeedSubscription": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSubnet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteSubnetCidrReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTrafficMirrorFilter": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTrafficMirrorTarget": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayConnect": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayConnectPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayRouteTableAnnouncement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpcEndpointConnectionNotifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpcEndpointServiceConfigurations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpcEndpoints": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpnConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpnConnectionRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeleteVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeprovisionByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeprovisionIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeprovisionPublicIpv4PoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterTransitGatewayMulticastGroupMembers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DeregisterTransitGatewayMulticastGroupSources": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAccountAttributes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAddressTransfers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAddressesAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAggregateIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAvailabilityZones": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeAwsNetworkPerformanceMetricSubscriptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeBundleTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeByoipCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCapacityReservationFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCapacityReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCarrierGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClassicLinkInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClientVpnAuthorizationRules": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClientVpnConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClientVpnEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClientVpnRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeClientVpnTargetNetworks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCoipPools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeConversionTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeCustomerGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeEgressOnlyInternetGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeElasticGpus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeExportImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeExportTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFastLaunchImages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFleetHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFleetInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFleets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeFpgaImages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeHostReservationOfferings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeHostReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIamInstanceProfileAssociations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIdentityIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeImages": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeImportImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeImportSnapshotTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceConnectEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceCreditSpecifications": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceEventWindows": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceStatus": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceTypeOfferings": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstanceTypes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeInternetGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpamPools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpamResourceDiscoveries": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpamResourceDiscoveryAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpamScopes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpams": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeIpv6Pools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeKeyPairs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLaunchTemplateVersions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLaunchTemplates": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGatewayRouteTableVpcAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGatewayRouteTables": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGatewayVirtualInterfaceGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGatewayVirtualInterfaces": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeLocalGateways": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeManagedPrefixLists": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeMovingAddresses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNatGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkAcls": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInsightsAccessScopeAnalyses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInsightsAccessScopes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInsightsAnalyses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInsightsPaths": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInterfacePermissions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeNetworkInterfaces": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribePlacementGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribePrefixLists": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribePrincipalIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribePublicIpv4Pools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeRegions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeReplaceRootVolumeTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeReservedInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeReservedInstancesListings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeReservedInstancesModifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeReservedInstancesOfferings": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeRouteTables": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeScheduledInstanceAvailability": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSecurityGroupReferences": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSecurityGroupRules": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSecurityGroups": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSnapshotTierStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSnapshots": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotDatafeedSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotFleetInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotFleetRequestHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotFleetRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotInstanceRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSpotPriceHistory": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeStaleSecurityGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeStoreImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeSubnets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTrafficMirrorFilters": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTrafficMirrorSessions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTrafficMirrorTargets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayConnectPeers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayConnects": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayMulticastDomains": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayPeeringAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayPolicyTables": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayRouteTableAnnouncements": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayRouteTables": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGatewayVpcAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTransitGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeTrunkInterfaceAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVerifiedAccessEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVerifiedAccessGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVerifiedAccessInstanceLoggingConfigurations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVerifiedAccessInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVerifiedAccessTrustProviders": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVolumeAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVolumeStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVolumes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVolumesModifications": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpointConnectionNotifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpointServiceConfigurations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpointServicePermissions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpointServices": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcEndpoints": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcPeeringConnections": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpcs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpnConnections": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DescribeVpnGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachClassicLinkVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DetachVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableAwsNetworkPerformanceMetricSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableFastLaunch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableImageDeprecation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableIpamOrganizationAdminAccount": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableSerialConsoleAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableTransitGatewayRouteTablePropagation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableVgwRoutePropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisableVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateEnclaveCertificateIamRole": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateIamInstanceProfile": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateSubnetCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateTrunkInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "DisassociateVpcCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableAwsNetworkPerformanceMetricSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableFastLaunch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableImageDeprecation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableIpamOrganizationAdminAccount": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableReachabilityAnalyzerOrganizationSharing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableSerialConsoleAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableTransitGatewayRouteTablePropagation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableVgwRoutePropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableVolumeIO": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "EnableVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ExportClientVpnClientCertificateRevocationList": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ExportClientVpnClientConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ExportImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ExportTransitGatewayRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetAssociatedEnclaveCertificateIamRoles": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetAssociatedIpv6PoolCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetAwsNetworkPerformanceData": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetCapacityReservationUsage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetCoipPoolUsage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetConsoleOutput": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetConsoleScreenshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetDefaultCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetEbsDefaultKmsKeyId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetFlowLogsIntegrationTemplate": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetGroupsForCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetHostReservationPurchasePreview": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetInstanceTypesFromInstanceRequirements": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetInstanceUefiData": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamAddressHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamDiscoveredAccounts": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamDiscoveredResourceCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamPoolAllocations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamPoolCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetIpamResourceCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetLaunchTemplateData": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetManagedPrefixListAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetManagedPrefixListEntries": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetNetworkInsightsAccessScopeAnalysisFindings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetNetworkInsightsAccessScopeContent": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetPasswordData": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetReservedInstancesExchangeQuote": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetSerialConsoleAccessStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetSpotPlacementScores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetSubnetCidrReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayAttachmentPropagations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayPolicyTableAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayPolicyTableEntries": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayPrefixListReferences": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayRouteTableAssociations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetTransitGatewayRouteTablePropagations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetVerifiedAccessEndpointPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetVerifiedAccessGroupPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetVpnConnectionDeviceSampleConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetVpnConnectionDeviceTypes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "GetVpnTunnelReplacementStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportClientVpnClientCertificateRevocationList": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportSnapshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ImportVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListImagesInRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ListSnapshotsInRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyAddressAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyAvailabilityZoneGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyCapacityReservationFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyDefaultCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyEbsDefaultKmsKeyId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIdentityIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceCapacityReservationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceEventStartTime": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceMaintenanceOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstanceMetadataOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyInstancePlacement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIpamResourceCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyPrivateDnsNameOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyReservedInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifySecurityGroupRules": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifySnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifySnapshotTier": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifySpotFleetRequest": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifySubnetAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTrafficMirrorFilterNetworkServices": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessEndpointPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessGroupPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessInstanceLoggingConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVolumeAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcEndpoint": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcEndpointConnectionNotification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcEndpointServiceConfiguration": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcEndpointServicePayerResponsibility": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcEndpointServicePermissions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcPeeringConnectionOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpcTenancy": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpnConnection": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpnConnectionOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpnTunnelCertificate": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ModifyVpnTunnelOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "MonitorInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "MoveAddressToVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "MoveByoipCidrToIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ProvisionByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ProvisionIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ProvisionPublicIpv4PoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "PurchaseHostReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "PurchaseReservedInstancesOffering": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "PurchaseScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RebootInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterTransitGatewayMulticastGroupMembers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RegisterTransitGatewayMulticastGroupSources": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RejectTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RejectTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RejectTransitGatewayVpcAttachment": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RejectVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RejectVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReleaseAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "ReleaseHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReleaseIpamPoolAllocation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceIamInstanceProfileAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceNetworkAclAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceRouteTableAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceTransitGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReplaceVpnTunnel": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ReportInstanceStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RequestSpotFleet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RequestSpotInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetAddressAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetEbsDefaultKmsKeyId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetInstanceAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "ResetSnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RestoreAddressToClassic": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RestoreImageFromRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RestoreManagedPrefixListVersion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RestoreSnapshotFromRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RestoreSnapshotTier": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RevokeClientVpnIngress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RevokeSecurityGroupEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RevokeSecurityGroupIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": ""
      }
    },
    {
      "RunInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "RunScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SearchLocalGatewayRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SearchTransitGatewayMulticastGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SearchTransitGatewayRoutes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "SendDiagnosticInterrupt": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartNetworkInsightsAccessScopeAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartNetworkInsightsAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StartVpcEndpointServicePrivateDnsVerification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "StopInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "TerminateClientVpnConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "TerminateInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UnassignIpv6Addresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UnassignPrivateIpAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UnassignPrivateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UnmonitorInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateSecurityGroupRuleDescriptionsEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "UpdateSecurityGroupRuleDescriptionsIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    },
    {
      "WithdrawByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": ""
      }
    }
  ],
  "details": {
    "AcceptVpcPeeringConnection": {
      "VpcPeeringConnectionId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AllocateAddress": {
      "Domain": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AssociateRouteTable": {
      "RouteTableId, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AssociateVpcCidrBlock": {
      "AmazonProvidedIpv6CidrBlock, CidrBlock, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "AmazonProvidedIpv6CidrBlock, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "AttachInternetGateway": {
      "InternetGatewayId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AttachVpnGateway": {
      "VpcId, VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AuthorizeSecurityGroupEgress": {
      "CidrIp, GroupId, IpProtocol": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "FromPort, GroupId, IpProtocol, ToPort": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "GroupId, IpPermissions": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "AuthorizeSecurityGroupIngress": {
      "CidrIp, GroupId, IpPermissions, IpProtocol": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "FromPort, GroupId, IpPermissions, IpProtocol, SourceSecurityGroupName, ToPort": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "GroupId, IpPermissions": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[10.23]",
            "test": "test_postgres_extension_query_export_to_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[11.16]",
            "test": "test_postgres_extension_query_export_to_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[12.8]",
            "test": "test_postgres_extension_query_export_to_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[13.4]",
            "test": "test_postgres_extension_query_export_to_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[14.7]",
            "test": "test_postgres_extension_query_export_to_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[15.2]",
            "test": "test_postgres_extension_query_export_to_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[10.23]",
            "test": "test_postgres_extension_table_import_from_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[11.16]",
            "test": "test_postgres_extension_table_import_from_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[12.8]",
            "test": "test_postgres_extension_table_import_from_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[13.4]",
            "test": "test_postgres_extension_table_import_from_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[14.7]",
            "test": "test_postgres_extension_table_import_from_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[15.2]",
            "test": "test_postgres_extension_table_import_from_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "GroupId, IpPermissions, IpProtocol, SourceSecurityGroupName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "GroupName, IpPermissions": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateInternetGateway": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateKeyPair": {
      "KeyName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/integration/test_stores.py::test_nonstandard_regions",
            "test": "test_nonstandard_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateLaunchTemplate": {
      "LaunchTemplateData, LaunchTemplateName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_invalid_launch_template_name",
            "test": "test_raise_invalid_launch_template_name",
            "response": "400",
            "error": "InvalidLaunchTemplateNameError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_when_launch_template_data_missing",
            "test": "test_raise_when_launch_template_data_missing",
            "response": "400",
            "error": "MissingParameterError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateLaunchTemplateVersion": {
      "LaunchTemplateData, LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "LaunchTemplateData, LaunchTemplateName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNatGateway": {
      "AllocationId, ClientToken, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "AllocationId, ClientToken, SubnetId, TagSpecifications": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNetworkAcl": {
      "VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNetworkAclEntry": {
      "CidrBlock, Egress, NetworkAclId, Protocol, RuleAction, RuleNumber": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNetworkInterface": {
      "ClientToken, Description, Groups, PrivateIpAddress, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, Description, PrivateIpAddress, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_update_service_creates_new_deployment",
            "test": "test_update_service_creates_new_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..attachments..details..value', '$..clusterArn', '$..containerInstanceArn', '$..containers..imageDigest', '$..containers..memory', '$..containers..networkInterfaces', '$..containers..runtimeId', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..taskArn', '$..taskDefinitionArn', '$..version', '$..attachments..id', '$..containers..containerArn', '$..containers..image']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateRoute": {
      "DestinationCidrBlock, GatewayId, RouteTableId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "DestinationCidrBlock, NatGatewayId, RouteTableId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "DestinationCidrBlock, RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateRouteTable": {
      "TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateSecurityGroup": {
      "Description, GroupName, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Description, GroupName, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateSubnet": {
      "AvailabilityZone, CidrBlock, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "AvailabilityZone, CidrBlock, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateTags": {
      "Resources, Tags": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpc": {
      "AmazonProvidedIpv6CidrBlock, CidrBlock, InstanceTenancy": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "AmazonProvidedIpv6CidrBlock, CidrBlock, InstanceTenancy, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_associate_vpc_with_hosted_zone",
            "test": "test_associate_vpc_with_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, InstanceTenancy": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, InstanceTenancy, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, TagSpecifications": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpcEndpoint": {
      "PolicyDocument, RouteTableIds, ServiceName, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "RouteTableIds, ServiceName, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "RouteTableIds, ServiceName, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "SecurityGroupIds, ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ServiceName, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpcEndpointServiceConfiguration": {
      "NetworkLoadBalancerArns": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpcPeeringConnection": {
      "PeerRegion, PeerVpcId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpnGateway": {
      "AvailabilityZone, Type": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteInternetGateway": {
      "InternetGatewayId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteLaunchTemplate": {
      "LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteNatGateway": {
      "NatGatewayId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteNetworkAcl": {
      "NetworkAclId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteRoute": {
      "DestinationCidrBlock, RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteRouteTable": {
      "RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteSecurityGroup": {
      "GroupId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteSubnet": {
      "SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpc": {
      "VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_associate_vpc_with_hosted_zone",
            "test": "test_associate_vpc_with_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpcEndpointServiceConfigurations": {
      "ServiceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpcEndpoints": {
      "VpcEndpointIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_end_point",
            "test": "test_create_vpc_end_point",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpcPeeringConnection": {
      "VpcPeeringConnectionId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpnGateway": {
      "VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeAccountAttributes": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_pickle_ec2_backend",
            "test": "test_pickle_ec2_backend",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "AttributeNames": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda.py::TestLambdaBaseFeatures::test_large_payloads",
            "test": "test_large_payloads",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeImages": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_create_asg_errors",
            "test": "test_create_asg_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_metrics_collection",
            "test": "test_metrics_collection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_images",
            "test": "test_describe_images",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_images_with_podman_localhost_prefix",
            "test": "test_describe_images_with_podman_localhost_prefix",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_and_stop_task[start_task]",
            "test": "test_start_and_stop_task[start_task]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters, Owners": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_additional_amis_present",
            "test": "test_additional_amis_present",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ImageIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_images",
            "test": "test_describe_images",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_instances",
            "test": "test_describe_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_instances",
            "test": "test_describe_instances",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeInternetGateways": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "InternetGatewayIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeKeyPairs": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "KeyNames": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/integration/test_stores.py::test_nonstandard_regions",
            "test": "test_nonstandard_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeLaunchTemplates": {
      "LaunchTemplateIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "LaunchTemplateNames": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeNatGateways": {
      "Filter": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "NatGatewayIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeNetworkAcls": {
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "NetworkAclIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeNetworkInterfaces": {
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeReservedInstances": {
      "OfferingClass, OfferingType, ReservedInstancesIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeReservedInstancesOfferings": {
      "AvailabilityZone, IncludeMarketplace, InstanceType, OfferingClass, OfferingType, ProductDescription, ReservedInstancesOfferingIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeRouteTables": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "RouteTableIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeSecurityGroups": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus', '$..StatusMessage']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_docdb.py::test_docdb_cluster",
            "test": "test_docdb_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment",
            "test": "test_db_cluster_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_instance_deployment",
            "test": "test_db_instance_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DbAddress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db",
            "test": "test_create_query_db",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db_with_port",
            "test": "test_create_query_db_with_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_rds_reboot_db_instances",
            "test": "test_action_rds_reboot_db_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_cluster_with_tags",
            "test": "test_create_cluster_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_neo4j_cluster",
            "test": "test_create_neo4j_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.1.0.0-3.4.11]",
            "test": "test_create_query_db[1.1.0.0-3.4.11]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.0.1-3.5.2]",
            "test": "test_create_query_db[1.2.0.1-3.5.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.1.0-3.6.2]",
            "test": "test_create_query_db[1.2.1.0-3.6.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.4.13]",
            "test": "test_create_query_db[None-3.4.13]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db_tags",
            "test": "test_create_query_db_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMariaDB::test_create_mariadb",
            "test": "test_create_mariadb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMssql::test_create_mssql",
            "test": "test_create_mssql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[False-5.7.39-MariaDB]",
            "test": "test_create_mysql[False-5.7.39-MariaDB]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[True-8.0.30-MySQL Community Server]",
            "test": "test_create_mysql[True-8.0.30-MySQL Community Server]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_data_api[True]",
            "test": "test_data_api[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_cluster",
            "test": "test_add_role_to_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_instance",
            "test": "test_add_role_to_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres_instance",
            "test": "test_create_aurora_postgres_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster",
            "test": "test_create_aurora_v2_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..AllocatedStorage', '$..StorageType', '$..DBInstanceStatus', '$..Endpoint', '$..AvailabilityZone', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DbClusterResourceId', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ReaderEndpoint', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_delete_instances",
            "test": "test_create_aurora_v2_cluster_delete_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..delete_db_cluster.DBCluster.DBClusterMembers', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DbClusterResourceId', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ReaderEndpoint', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_db_custom_port",
            "test": "test_create_db_custom_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres",
            "test": "test_create_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_cluster",
            "test": "test_create_snapshot_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_instance",
            "test": "test_create_snapshot_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_data_api",
            "test": "test_data_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata[8].precision', '$..records[0].[14].stringValue', '$..records[0].[15].stringValue']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_already_exists",
            "test": "test_db_cluster_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_endpoints",
            "test": "test_db_cluster_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_scaling",
            "test": "test_db_cluster_scaling",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_instance_already_exists",
            "test": "test_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DBInstanceStatus', '$..Endpoint', '$..DBName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_cluster",
            "test": "test_modify_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_db_parametergroup_named_default",
            "test": "test_postgres_db_parametergroup_named_default",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[11.15]",
            "test": "test_postgres_versions[11.15]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[12.9]",
            "test": "test_postgres_versions[12.9]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[13.4]",
            "test": "test_postgres_versions[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_serverless_no_cluster_endpoint",
            "test": "test_serverless_no_cluster_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[10.23]",
            "test": "test_lambda_extensions[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[11.16]",
            "test": "test_lambda_extensions[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[12.8]",
            "test": "test_lambda_extensions[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[13.4]",
            "test": "test_lambda_extensions[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[14.7]",
            "test": "test_lambda_extensions[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[15.2]",
            "test": "test_lambda_extensions[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[10.23]",
            "test": "test_postgres_extension_query_export_to_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[11.16]",
            "test": "test_postgres_extension_query_export_to_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[12.8]",
            "test": "test_postgres_extension_query_export_to_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[13.4]",
            "test": "test_postgres_extension_query_export_to_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[14.7]",
            "test": "test_postgres_extension_query_export_to_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[15.2]",
            "test": "test_postgres_extension_query_export_to_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[10.23]",
            "test": "test_postgres_extension_table_import_from_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[11.16]",
            "test": "test_postgres_extension_table_import_from_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[12.8]",
            "test": "test_postgres_extension_table_import_from_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[13.4]",
            "test": "test_postgres_extension_table_import_from_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[14.7]",
            "test": "test_postgres_extension_table_import_from_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[15.2]",
            "test": "test_postgres_extension_table_import_from_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[10.23]",
            "test": "test_postgres_s3_extension_helpers[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[11.16]",
            "test": "test_postgres_s3_extension_helpers[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12.8]",
            "test": "test_postgres_s3_extension_helpers[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[13.4]",
            "test": "test_postgres_s3_extension_helpers[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[14.7]",
            "test": "test_postgres_s3_extension_helpers[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[15.2]",
            "test": "test_postgres_s3_extension_helpers[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_cluster_with_instances",
            "test": "test_reset_cluster_with_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mariadb]",
            "test": "test_reset_db_instance[mariadb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mysql]",
            "test": "test_reset_db_instance[mysql]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[sqlserver-se]",
            "test": "test_reset_db_instance[sqlserver-se]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster",
            "test": "test_global_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DbClusterResourceId', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..Endpoint', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..Port', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..ReaderEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_read_write",
            "test": "test_global_cluster_read_write",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_remove_instances_from_cluster",
            "test": "test_global_cluster_remove_instances_from_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "GroupIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "MaxResults": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeSubnets": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus', '$..StatusMessage']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClusterArn', '$..CurrentVersion', '$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.SecurityGroups', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo.KafkaVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_update_service_creates_new_deployment",
            "test": "test_update_service_creates_new_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..attachments..details..value', '$..clusterArn', '$..containerInstanceArn', '$..containers..imageDigest', '$..containers..memory', '$..containers..networkInterfaces', '$..containers..runtimeId', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..taskArn', '$..taskDefinitionArn', '$..version', '$..attachments..id', '$..containers..containerArn', '$..containers..image']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_create_app_in_k3s_cluster",
            "test": "test_create_app_in_k3s_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "SubnetIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeVpcAttribute": {
      "Attribute, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcClassicLink": {
      "VpcIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcClassicLinkDnsSupport": {
      "VpcIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcEndpointServiceConfigurations": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcEndpointServices": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcEndpoints": {
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "MaxResults": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "VpcEndpointIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcPeeringConnections": {
      "VpcPeeringConnectionIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcs": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupIds', '$..ShareStatus', '$..StatusMessage']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_update_service_creates_new_deployment",
            "test": "test_update_service_creates_new_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..attachments..details..value', '$..clusterArn', '$..containerInstanceArn', '$..containers..imageDigest', '$..containers..memory', '$..containers..networkInterfaces', '$..containers..runtimeId', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..taskArn', '$..taskDefinitionArn', '$..version', '$..attachments..id', '$..containers..containerArn', '$..containers..image']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[private-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[private-invalid name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[public-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[public-invalid name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_cfn_with_route_table",
            "test": "test_cfn_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_legacy.py::TestCloudFormation::test_functions_in_output_export_name",
            "test": "test_functions_in_output_export_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_docdb.py::test_docdb_cluster",
            "test": "test_docdb_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment",
            "test": "test_db_cluster_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_instance_deployment",
            "test": "test_db_instance_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DbAddress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db",
            "test": "test_create_query_db",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db_with_port",
            "test": "test_create_query_db_with_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_create_app_in_k3s_cluster",
            "test": "test_create_app_in_k3s_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.user-agent', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_rds_reboot_db_instances",
            "test": "test_action_rds_reboot_db_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_cluster_with_tags",
            "test": "test_create_cluster_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_neo4j_cluster",
            "test": "test_create_neo4j_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.1.0.0-3.4.11]",
            "test": "test_create_query_db[1.1.0.0-3.4.11]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.0.1-3.5.2]",
            "test": "test_create_query_db[1.2.0.1-3.5.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.1.0-3.6.2]",
            "test": "test_create_query_db[1.2.1.0-3.6.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.4.13]",
            "test": "test_create_query_db[None-3.4.13]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db_tags",
            "test": "test_create_query_db_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMariaDB::test_create_mariadb",
            "test": "test_create_mariadb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMssql::test_create_mssql",
            "test": "test_create_mssql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[False-5.7.39-MariaDB]",
            "test": "test_create_mysql[False-5.7.39-MariaDB]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[True-8.0.30-MySQL Community Server]",
            "test": "test_create_mysql[True-8.0.30-MySQL Community Server]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_data_api[True]",
            "test": "test_data_api[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_cluster",
            "test": "test_add_role_to_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_instance",
            "test": "test_add_role_to_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres_instance",
            "test": "test_create_aurora_postgres_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster",
            "test": "test_create_aurora_v2_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..AllocatedStorage', '$..StorageType', '$..DBInstanceStatus', '$..Endpoint', '$..AvailabilityZone', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DbClusterResourceId', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ReaderEndpoint', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_delete_instances",
            "test": "test_create_aurora_v2_cluster_delete_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..delete_db_cluster.DBCluster.DBClusterMembers', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DbClusterResourceId', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ReaderEndpoint', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_db_custom_port",
            "test": "test_create_db_custom_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres",
            "test": "test_create_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_cluster",
            "test": "test_create_snapshot_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_instance",
            "test": "test_create_snapshot_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_data_api",
            "test": "test_data_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata[8].precision', '$..records[0].[14].stringValue', '$..records[0].[15].stringValue']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_already_exists",
            "test": "test_db_cluster_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_endpoints",
            "test": "test_db_cluster_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_scaling",
            "test": "test_db_cluster_scaling",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_instance_already_exists",
            "test": "test_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DBInstanceStatus', '$..Endpoint', '$..DBName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_cluster",
            "test": "test_modify_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_db_parametergroup_named_default",
            "test": "test_postgres_db_parametergroup_named_default",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[11.15]",
            "test": "test_postgres_versions[11.15]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[12.9]",
            "test": "test_postgres_versions[12.9]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[13.4]",
            "test": "test_postgres_versions[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_serverless_no_cluster_endpoint",
            "test": "test_serverless_no_cluster_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[10.23]",
            "test": "test_lambda_extensions[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[11.16]",
            "test": "test_lambda_extensions[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[12.8]",
            "test": "test_lambda_extensions[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[13.4]",
            "test": "test_lambda_extensions[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[14.7]",
            "test": "test_lambda_extensions[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_lambda_extensions[15.2]",
            "test": "test_lambda_extensions[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[10.23]",
            "test": "test_postgres_extension_query_export_to_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[11.16]",
            "test": "test_postgres_extension_query_export_to_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[12.8]",
            "test": "test_postgres_extension_query_export_to_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[13.4]",
            "test": "test_postgres_extension_query_export_to_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[14.7]",
            "test": "test_postgres_extension_query_export_to_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[15.2]",
            "test": "test_postgres_extension_query_export_to_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[10.23]",
            "test": "test_postgres_extension_table_import_from_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[11.16]",
            "test": "test_postgres_extension_table_import_from_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[12.8]",
            "test": "test_postgres_extension_table_import_from_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[13.4]",
            "test": "test_postgres_extension_table_import_from_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[14.7]",
            "test": "test_postgres_extension_table_import_from_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[15.2]",
            "test": "test_postgres_extension_table_import_from_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[10.23]",
            "test": "test_postgres_s3_extension_helpers[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[11.16]",
            "test": "test_postgres_s3_extension_helpers[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12.8]",
            "test": "test_postgres_s3_extension_helpers[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[13.4]",
            "test": "test_postgres_s3_extension_helpers[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[14.7]",
            "test": "test_postgres_s3_extension_helpers[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[15.2]",
            "test": "test_postgres_s3_extension_helpers[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_cluster_with_instances",
            "test": "test_reset_cluster_with_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mariadb]",
            "test": "test_reset_db_instance[mariadb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mysql]",
            "test": "test_reset_db_instance[mysql]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[sqlserver-se]",
            "test": "test_reset_db_instance[sqlserver-se]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster",
            "test": "test_global_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DbClusterResourceId', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..Endpoint', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..Port', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..ReaderEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_read_write",
            "test": "test_global_cluster_read_write",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_remove_instances_from_cluster",
            "test": "test_global_cluster_remove_instances_from_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "VpcIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Architectures', '$..EphemeralStorage', '$..LastUpdateStatus', '$..MemorySize', '$..State', '$..StateReason', '$..StateReasonCode', '$..VpcConfig', '$..CodeSigningConfig', '$..Environment', '$..HTTPStatusCode', '$..Layers', '$..CreateFunctionResponse.RuntimeVersionConfig', '$..CreateFunctionResponse.SnapStart']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_security_groups",
            "test": "test_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[False]",
            "test": "test_create_task_with_ssm_parameter[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_ssm_parameter[True]",
            "test": "test_create_task_with_ssm_parameter[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_glacier_deployed",
            "test": "test_glacier_deployed",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpnGateways": {
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DetachInternetGateway": {
      "InternetGatewayId, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DetachVpnGateway": {
      "VpcId, VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DisassociateRouteTable": {
      "AssociationId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.certificateAuthority', '$..cluster.endpoint', '$..cluster.kubernetesNetworkConfig', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.resourcesVpcConfig.clusterSecurityGroupId', '$..cluster.resourcesVpcConfig.vpcId', '$..cluster.status', '$..cluster.tags', '$..cluster.version', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DisassociateVpcCidrBlock": {
      "AssociationId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ImportKeyPair": {
      "KeyName, PublicKeyMaterial": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_ssh_key_pairs",
            "test": "test_ssh_key_pairs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifyLaunchTemplate": {
      "DefaultVersion, LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "400",
            "error": "InvalidLaunchTemplateIdError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifySubnetAttribute": {
      "AssignIpv6AddressOnCreation, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "EnableDns64, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "MapPublicIpOnLaunch, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_scenario_validate_infra",
            "test": "test_scenario_validate_infra",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "PrivateDnsHostnameTypeOnLaunch, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "PurchaseReservedInstancesOffering": {
      "InstanceCount, LimitPrice, ReservedInstancesOfferingId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ReleaseAddress": {
      "AllocationId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/glue/test_basic.py::TestGlueCrud::test_classifier_crud",
            "test": "test_classifier_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "AllocationId, PublicIp": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_describe_db_instances_with_filter",
            "test": "test_describe_db_instances_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigateway/test_http_apis.py::TestHttpApis::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "RevokeSecurityGroupEgress": {
      "GroupId, IpPermissions": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_terraform.py::TestTerraform::test_bucket_exists",
            "test": "test_bucket_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/test_terraform.py::TestTerraform::test_appsync_deployed",
            "test": "test_appsync_deployed",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "RevokeSecurityGroupIngress": {
      "GroupId, IpPermissions": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[10.23]",
            "test": "test_postgres_extension_query_export_to_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[11.16]",
            "test": "test_postgres_extension_query_export_to_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[12.8]",
            "test": "test_postgres_extension_query_export_to_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[13.4]",
            "test": "test_postgres_extension_query_export_to_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[14.7]",
            "test": "test_postgres_extension_query_export_to_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_query_export_to_s3[15.2]",
            "test": "test_postgres_extension_query_export_to_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[10.23]",
            "test": "test_postgres_extension_table_import_from_s3[10.23]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[11.16]",
            "test": "test_postgres_extension_table_import_from_s3[11.16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[12.8]",
            "test": "test_postgres_extension_table_import_from_s3[12.8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[13.4]",
            "test": "test_postgres_extension_table_import_from_s3[13.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[14.7]",
            "test": "test_postgres_extension_table_import_from_s3[14.7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresExtensions::test_postgres_extension_table_import_from_s3[15.2]",
            "test": "test_postgres_extension_table_import_from_s3[15.2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "RunInstances": {
      "BlockDeviceMappings, ClientToken, ImageId, MaxCount, MinCount, UserData": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_create_instance_with_ebs_create_fs",
            "test": "test_create_instance_with_ebs_create_fs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, KeyName, MaxCount, MinCount": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_ssh_key_pairs",
            "test": "test_ssh_key_pairs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, MaxCount, MinCount": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_describe_instances",
            "test": "test_describe_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_and_stop_task[start_task]",
            "test": "test_start_and_stop_task[start_task]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_cancel_command",
            "test": "test_cancel_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_describe_instance_information",
            "test": "test_describe_instance_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_send_command",
            "test": "test_send_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, MaxCount, MinCount, UserData": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "StartInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_stop_start_terminate_instances_for_invalid_instance_id_raises[start_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[start_instances]",
            "response": "400",
            "error": "InvalidInstanceIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "StopInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_stop_start_terminate_instances_for_invalid_instance_id_raises[stop_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[stop_instances]",
            "response": "400",
            "error": "InvalidInstanceIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "TerminateInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_cancel_command",
            "test": "test_cancel_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_describe_instance_information",
            "test": "test_describe_instance_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSsm::test_send_command",
            "test": "test_send_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_stop_start_terminate_instances_for_invalid_instance_id_raises[terminate_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[terminate_instances]",
            "response": "400",
            "error": "InvalidInstanceIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    }
  }
}