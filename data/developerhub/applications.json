{
  "applications": [
    {
      "title": "Serverless Container-based APIs with Amazon ECS & Amazon API Gateway",
      "description": "Deploy a Full-Stack Serverless Web application using ECS, API Gateway, DynamoDB and Cognito to expose container-based APIs with ready-to-deploy infrastructure via Terraform & CloudFormation on LocalStack",
      "url": "https://github.com/localstack/serverless-api-ecs-apigateway-sample",
      "teaser": "https://raw.githubusercontent.com/localstack/serverless-api-ecs-apigateway-sample/developer-hub/images/serverless-container-api.png",
      "services": ["ddb", "agw", "iam", "cgn", "ecs"],
      "deployment":  ["terraform", "awscli","cloudformation"],
      "platform": ["javascript"],
      "tags": ["serverless-containers", "security", "identity", "compliance"],
      "pro": true
    },
    {
      "title": "Full-Stack application with AWS Lambda, DynamoDB & S3 for shipment validation",
      "description": "Create a CRUD web application with S3, DynamoDB, and Lambda function integration for shipment validation and listing and deploy it with Terraform on LocalStack",
      "url": "https://github.com/localstack/shipment-list-demo",
      "teaser": "https://raw.githubusercontent.com/localstack/shipment-list-demo/master/app_diagram.png",
      "services": ["s3", "ddb", "lmb", "iam"],
      "deployment":  ["terraform"],
      "platform": ["java", "react"],
      "tags": ["spring boot", "lambda-trigger"],
      "pro": false
    },
    {
      "title": "Step-up Authentication using Amazon Cognito",
      "description": "Step-up Authentication using Cognito, DynamoDB, API Gateway Lambda Authorizer, and Lambda functions deployed using Cloud Development Kit on LocalStack",
      "url": "https://github.com/localstack/step-up-auth-sample",
      "teaser": "https://raw.githubusercontent.com/localstack/step-up-auth-sample/developer-hub/images/step-up-architecture.png",
      "services": ["agw", "lmb", "ddb", "cgn"],
      "deployment":  ["cdk", "awscli"],
      "platform": ["typescript","javascript"],
      "tags": ["step-up-auth", "rule-based-authentication", "localsurf"],
      "pro": true
    },
    {
      "title": "Serverless microservices with Amazon API Gateway, DynamoDB, SQS, and Lambda",
      "description": "Serverless microservices using API Gateway, Lambda, DynamoDB, SQS on LocalStack for managing friend state in gaming services asynchronously deployed using Cloud Development Kit on LocalStack",
      "url": "https://github.com/localstack/microservices-apigateway-lambda-dynamodb-sqs-sample",
      "teaser": "https://raw.githubusercontent.com/localstack/microservices-apigateway-lambda-dynamodb-sqs-sample/developer-hub/images/microservices-apigateway-lambda-dynamodb-sqs-sample-architecture.png",
      "services": ["lmb", "agw", "ddb", "sqs"],
      "deployment":  ["cdk"],
      "platform": ["typescript"],
      "tags": ["serverless", "microservices"],
      "pro": true
    },
    {
      "title": "Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3",
      "description": "Event-driven architecture with SNS FIFO, DynamoDB, Lambda, and S3 sample demonstrating a recruiting agency application deployed using Serverless Application Model on LocalStack",
      "url": "https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo",
      "teaser": "https://raw.githubusercontent.com/localstack/event-driven-architecture-with-amazon-sns-fifo/developer-hub/images/architecture.png",
      "services": ["sqs", "lmb", "ddb", "sns", "s3"],
      "deployment":  ["samlocal", "sam"],
      "platform": ["python"],
      "tags": ["serverless", "event-driven architecture"],
      "pro": true
    }
  ]
}
