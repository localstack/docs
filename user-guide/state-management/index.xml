<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>State Management on Docs</title><link>/user-guide/state-management/</link><description>Recent content in State Management on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/user-guide/state-management/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Pods</title><link>/user-guide/state-management/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/cloud-pods/</guid><description>Introduction Cloud pods are persistent state snapshots of your LocalStack instance that can easily be stored, versioned, shared, and restored. Cloud Pods can be used for various purposes, such as:
Save and manage snapshots of active LocalStack instances. Share state snapshots with your team to debug collectively. Automate your testing pipelines by pre-seeding CI environments. Create reproducible development and testing environments locally. Installation You can save and load the persistent state of Cloud Pods, you can use the Cloud Pods command-line interface (CLI).</description></item><item><title>Persistence</title><link>/user-guide/state-management/persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/persistence/</guid><description>Introduction LocalStack&amp;rsquo;s Persistence mechanism enables the saving and restoration of the entire LocalStack state, including all AWS resources and data, on your local machine. It functions as a &amp;ldquo;pause and resume&amp;rdquo; feature, allowing you to take a snapshot of your LocalStack instance and save this data to disk. This mechanism ensures a quick and efficient way to preserve and continue your work with AWS resources locally.
Configuration To start snapshot-based persistence, launch LocalStack with the configuration option PERSISTENCE=1.</description></item><item><title>Export &amp; Import State</title><link>/user-guide/state-management/export-import-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/export-import-state/</guid><description>Introduction The Export/Import State feature enables you to export the state of your LocalStack instance into a file and import it into another LocalStack instance. This feature is useful when you want to save your LocalStack instance&amp;rsquo;s state for later use.
LocalStack CLI The LocalStack CLI enables you to export your infrastructure state to a file and import it into another LocalStack instance. You can access the state management commands by running localstack state in your terminal.</description></item><item><title>Launchpad</title><link>/user-guide/state-management/launchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/launchpad/</guid><description>The LocalStack Cloud Pods Launchpad enables you to easily share and inject Cloud Pods into a LocalStack instance.
Creating your shareable link You can visit Cloud Pods launchpad to generate a shareable link for your pods.
Enter a public URL to your pod Cloud Pod the first input field, then click Generate Link. You can copy the resulting link and share it with others. Additionally, you have the option to copy a markdown snippet for quickly adding a badge to your repository.</description></item><item><title>CLI command reference</title><link>/user-guide/state-management/pods-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/pods-cli/</guid><description>This reference provides descriptions and example commands for LocalStack Cloud Pods CLI (pod) commands.
Syntax Use the following syntax to run localstack pod commands from your terminal window:
$ localstack pod [OPTIONS] COMMAND [ARGS]... In the above syntax:
COMMAND specifies the operation you want to perform with your Cloud Pods (save or load). OPTIONS specifies the optional flags. ARGS specifies the command arguments. Commands The following section lists the available commands for the Cloud Pods CLI.</description></item><item><title>Persistence Coverage for AWS Services</title><link>/user-guide/state-management/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/support/</guid><description>Persistence Coverage Overview Service Supported Persistence Test Suite Limitations accessanalyzer AWS Account Management ACM (AWS Certificate Manager) AWS Private Certificate Authority (CA) ✔️ ✔️ amp Amplify ✔️ ✔️ amplifybackend amplifyuibuilder API Gateway ✔️ ✔️ API Gateway Management API API Gateway v2 ✔️ AppConfig ✔️ AppConfig Data appfabric appflow appintegrations Application Auto Scaling ✔️ ✔️ application-insights application-signals applicationcostprofiler appmesh apprunner appstream AppSync apptest arc-zonal-shift artifact Athena auditmanager Auto Scaling autoscaling-plans b2bi Backup ✔️ ✔️ backup-gateway backupsearch Batch ✔️ bcm-data-exports bcm-pricing-calculator bedrock bedrock-agent bedrock-agent-runtime bedrock-data-automation bedrock-data-automation-runtime bedrock-runtime billing billingconductor braket budgets CE (Cost Explorer API) chatbot chime chime-sdk-identity chime-sdk-media-pipelines chime-sdk-meetings chime-sdk-messaging chime-sdk-voice cleanrooms cleanroomsml cloud9 cloudcontrol clouddirectory CloudFormation ✔️ Users need to be sure that the stacks are completely deployed before saving LocalStack state.</description></item></channel></rss>